{
    "sourceFile": "src/components/Register/hooks/useRegisterForm.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 11,
            "patches": [
                {
                    "date": 1755443134254,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1755443139832,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -25,9 +25,9 @@\n   const [linkedInProfileUrl, setLinkedInProfileUrl] = useState(\"\");\r\n   const [linkedInName, setLinkedInName] = useState(\"\");\r\n   const [linkedInSummary, setLinkedInSummary] = useState(\"\");\r\n \r\n-  // ğŸ“Œ Add here your add/remove handlers (priorities, skills, industries, etc.)\r\n+  //  Add here your add/remove handlers (priorities, skills, industries, etc.)\r\n   // (I can move all functions you wrote directly here boss without changing logic)\r\n \r\n   const handleRegister = async () => {\r\n     try {\r\n"
                },
                {
                    "date": 1755443451001,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,82 +1,161 @@\n import { useState } from \"react\";\r\n import { registerUser } from \"../../../api/register/registerApi\";\r\n \r\n export default function useRegisterForm() {\r\n+  // Api's\r\n   const [firstName, setFirstName] = useState(\"\");\r\n   const [lastName, setLastName] = useState(\"\");\r\n   const [email, setEmail] = useState(\"\");\r\n   const [dob, setDob] = useState(\"\");\r\n \r\n+  const formDob = (dateStr) => {\r\n+    const [year, month, day] = dateStr.split(\"_\");\r\n+    return ${day}-${month}-${year};\r\n+  };\r\n+\r\n   const [goal, setGoal] = useState(\"\");\r\n   const [experience, setExperience] = useState(\"\");\r\n \r\n+  const [linkedInProfileUrl, setLinkedInProfileUrl] = useState(\"\");\r\n+  const [linkedInName, setLinkedInName] = useState(\"\");\r\n+  const [linkedInSummary, setLinkedInSummary] = useState(\"\");\r\n+\r\n+  // priorities state\r\n   const [priorities, setPriorities] = useState([]);\r\n   const [priorityInput, setPriorityInput] = useState(\"\");\r\n+  const MAX_PRIORITIES = 10;\r\n \r\n+  const addPriority = () => {\r\n+    const v = priorityInput.trim();\r\n+    if (!v) return;\r\n+    if (priorities.includes(v)) {\r\n+      setPriorityInput(\"\");\r\n+      return;\r\n+    }\r\n+    if (priorities.length >= MAX_PRIORITIES) return;\r\n+    setPriorities((p) => [...p, v]);\r\n+    setPriorityInput(\"\");\r\n+  };\r\n+\r\n+  const handlePriorityKey = (e) => {\r\n+    if (e.key === \"Enter\") {\r\n+      e.preventDefault();\r\n+      addPriority();\r\n+    }\r\n+  };\r\n+\r\n+  const removePriority = (idx) => {\r\n+    setPriorities((p) => p.filter((_, i) => i !== idx));\r\n+  };\r\n+\r\n+  // skills state\r\n   const [skills, setSkills] = useState([]);\r\n   const [skillInput, setSkillInput] = useState(\"\");\r\n+  const MAX_SKILLS = 10;\r\n \r\n-  const [industries, setIndustries] = useState([]);\r\n-  const [industryInput, setIndustryInput] = useState([]);\r\n+  const commonSkills = [\r\n+    \"ENGINEERING\",\r\n+    \"PRODUCT\",\r\n+    \"DESIGN\",\r\n+    \"MARKETING\",\r\n+    \"SALES\",\r\n+    \"FINANCE\",\r\n+    \"OPERATIONS\",\r\n+    \"LEGAL\",\r\n+    \"HR\",\r\n+    \"STRATEGY\",\r\n+    \"DATA SCIENCE\",\r\n+    \"AI ML\",\r\n+  ];\r\n \r\n-  const [experiences, setExperiences] = useState([]);\r\n-  const [educationList, setEducationList] = useState([]);\r\n+  const addSkill = (v) => {\r\n+    const value = (v || skillInput).trim();\r\n+    if (!value) return;\r\n+    if (skills.includes(value)) {\r\n+      setSkillInput(\"\");\r\n+      return;\r\n+    }\r\n+    if (skills.length >= MAX_SKILLS) return;\r\n\\ No newline at end of file\n+    setSkills((prev) => [...prev, value]);\r\n+    setSkillInput(\"\");\r\n+  };\r\n \r\n-  const [linkedInProfileUrl, setLinkedInProfileUrl] = useState(\"\");\r\n-  const [linkedInName, setLinkedInName] = useState(\"\");\r\n-  const [linkedInSummary, setLinkedInSummary] = useState(\"\");\r\n+  const handleSkillKey = (e) => {\r\n+    if (e.key === \"Enter\") {\r\n+      e.preventDefault();\r\n+      addSkill();\r\n+    }\r\n+  };\r\n \r\n-  //  Add here your add/remove handlers (priorities, skills, industries, etc.)\r\n-  // (I can move all functions you wrote directly here boss without changing logic)\r\n+  const removeSkill = (idx) => {\r\n+    setSkills((prev) => prev.filter((_, i) => i !== idx));\r\n+  };\r\n \r\n-  const handleRegister = async () => {\r\n-    try {\r\n-      const payload = {\r\n-        firstName,\r\n-        lastName,\r\n-        email,\r\n-        dob,\r\n-        goal,\r\n-        priorities,\r\n-        experience,\r\n-        skills,\r\n-        industries,\r\n-        linkedInProfileUrl,\r\n-        linkedInName,\r\n-        linkedInSummary,\r\n-        linkedInExperience: experiences,\r\n-        linkedInEducation: educationList,\r\n-        linkedInSkills: skills,\r\n-        linkedInConnectionsCount: 500,\r\n-      };\r\n+  const toggleCommonSkill = (skill) => {\r\n+    if (skills.includes(skill)) {\r\n+      setSkills((prev) => prev.filter((s) => s !== skill));\r\n+    } else {\r\n+      addSkill(skill);\r\n+    }\r\n+  };\r\n \r\n-      console.log(\"Payload being sent:\", JSON.stringify(payload, null, 2));\r\n-      const data = await registerUser(payload);\r\n-      console.log(\"Registration Success:\", data);\r\n-      alert(\"User registered successfully!\");\r\n-    } catch (err) {\r\n-      console.error(\"Registration Error:\", err);\r\n-      alert(err.message || \"Registration failed\");\r\n+  // Industries state\r\n+  const [industries, setIndustries] = useState([]);\r\n+  const [industryInput, setIndustryInput] = useState(\"\");\r\n+  const MAX_INDUSTRIES = 10;\r\n+\r\n+  const addIndustry = () => {\r\n+    const value = industryInput.trim();\r\n+    if (!value) return;\r\n+    if (industries.includes(value)) {\r\n+      setIndustryInput(\"\");\r\n+      return;\r\n     }\r\n+    if (industries.length >= MAX_INDUSTRIES) return;\r\n+    setIndustries((prev) => [...prev, value]);\r\n+    setIndustryInput(\"\");\r\n   };\r\n \r\n-  return {\r\n-    // states\r\n-    firstName, setFirstName,\r\n-    lastName, setLastName,\r\n-    email, setEmail,\r\n-    dob, setDob,\r\n-    goal, setGoal,\r\n-    experience, setExperience,\r\n-    priorities, setPriorities, priorityInput, setPriorityInput,\r\n-    skills, setSkills, skillInput, setSkillInput,\r\n-    industries, setIndustries, industryInput, setIndustryInput,\r\n-    experiences, setExperiences,\r\n-    educationList, setEducationList,\r\n-    linkedInProfileUrl, setLinkedInProfileUrl,\r\n-    linkedInName, setLinkedInName,\r\n-    linkedInSummary, setLinkedInSummary,\r\n-    // methods\r\n-    handleRegister,\r\n+  const removeIndustry = (idx) => {\r\n+    setIndustries((prev) => prev.filter((_, i) => i !== idx));\r\n   };\r\n-}\n+\r\n+  const handleIndustryKey = (e) => {\r\n+    if (e.key === \"Enter\") {\r\n+      e.preventDefault();\r\n+      addIndustry();\r\n+    }\r\n+  };\r\n+\r\n+  // Experience state\r\n+  const [experiences, setExperiences] = useState([]);\r\n+\r\n+  const addExperience = () => {\r\n+    setExperiences([\r\n+      ...experiences,\r\n+      {\r\n+        id: Date.now(),\r\n+        jobTitle: \"\",\r\n+        company: \"\",\r\n+        startDate: \"\",\r\n+        endDate: \"\",\r\n+        location: \"\",\r\n+        currentlyWorking: false,\r\n+      },\r\n+    ]);\r\n+  };\r\n+\r\n+  const updateExperience = (id, field, value) => {\r\n+    setExperiences(\r\n+      experiences.map((exp) =>\r\n+        exp.id === id ? { ...exp, [field]: value } : exp\r\n+      )\r\n+    );\r\n+  };\r\n+\r\n+  const removeExperience = (id) => {\r\n+    setExperiences(experiences.filter((exp) => exp.id !== id));\r\n+  };\r\n+\r\n+  // Education state\r\n+  const [educationList, setEducationList] = useState([]);\n\\ No newline at end of file\n"
                },
                {
                    "date": 1755443461139,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,259 @@\n+import { useState } from \"react\";\r\n+import { registerUser } from \"../../../api/register/registerApi\";\r\n+\r\n+export default function useRegisterForm() {\r\n+  // Api's\r\n+  const [firstName, setFirstName] = useState(\"\");\r\n+  const [lastName, setLastName] = useState(\"\");\r\n+  const [email, setEmail] = useState(\"\");\r\n+  const [dob, setDob] = useState(\"\");\r\n+\r\n+  const formDob = (dateStr) => {\r\n+    const [year, month, day] = dateStr.split(\"_\");\r\n+    return ${day}-${month}-${year};\r\n+  };\r\n+\r\n+  const [goal, setGoal] = useState(\"\");\r\n+  const [experience, setExperience] = useState(\"\");\r\n+\r\n+  const [linkedInProfileUrl, setLinkedInProfileUrl] = useState(\"\");\r\n+  const [linkedInName, setLinkedInName] = useState(\"\");\r\n+  const [linkedInSummary, setLinkedInSummary] = useState(\"\");\r\n+\r\n+  // priorities state\r\n+  const [priorities, setPriorities] = useState([]);\r\n+  const [priorityInput, setPriorityInput] = useState(\"\");\r\n+  const MAX_PRIORITIES = 10;\r\n+\r\n+  const addPriority = () => {\r\n+    const v = priorityInput.trim();\r\n+    if (!v) return;\r\n+    if (priorities.includes(v)) {\r\n+      setPriorityInput(\"\");\r\n+      return;\r\n+    }\r\n+    if (priorities.length >= MAX_PRIORITIES) return;\r\n+    setPriorities((p) => [...p, v]);\r\n+    setPriorityInput(\"\");\r\n+  };\r\n+\r\n+  const handlePriorityKey = (e) => {\r\n+    if (e.key === \"Enter\") {\r\n+      e.preventDefault();\r\n+      addPriority();\r\n+    }\r\n+  };\r\n+\r\n+  const removePriority = (idx) => {\r\n+    setPriorities((p) => p.filter((_, i) => i !== idx));\r\n+  };\r\n+\r\n+  // skills state\r\n+  const [skills, setSkills] = useState([]);\r\n+  const [skillInput, setSkillInput] = useState(\"\");\r\n+  const MAX_SKILLS = 10;\r\n+\r\n+  const commonSkills = [\r\n+    \"ENGINEERING\",\r\n+    \"PRODUCT\",\r\n+    \"DESIGN\",\r\n+    \"MARKETING\",\r\n+    \"SALES\",\r\n+    \"FINANCE\",\r\n+    \"OPERATIONS\",\r\n+    \"LEGAL\",\r\n+    \"HR\",\r\n+    \"STRATEGY\",\r\n+    \"DATA SCIENCE\",\r\n+    \"AI ML\",\r\n+  ];\r\n+\r\n+  const addSkill = (v) => {\r\n+    const value = (v || skillInput).trim();\r\n+    if (!value) return;\r\n+    if (skills.includes(value)) {\r\n+      setSkillInput(\"\");\r\n+      return;\r\n+    }\r\n+    if (skills.length >= MAX_SKILLS) return;\r\n+    setSkills((prev) => [...prev, value]);\r\n+    setSkillInput(\"\");\r\n+  };\r\n+\r\n+  const handleSkillKey = (e) => {\r\n+    if (e.key === \"Enter\") {\r\n+      e.preventDefault();\r\n+      addSkill();\r\n+    }\r\n+  };\r\n+\r\n+  const removeSkill = (idx) => {\r\n+    setSkills((prev) => prev.filter((_, i) => i !== idx));\r\n+  };\r\n+\r\n+  const toggleCommonSkill = (skill) => {\r\n+    if (skills.includes(skill)) {\r\n+      setSkills((prev) => prev.filter((s) => s !== skill));\r\n+    } else {\r\n+      addSkill(skill);\r\n+    }\r\n+  };\r\n+\r\n+  // Industries state\r\n+  const [industries, setIndustries] = useState([]);\r\n+  const [industryInput, setIndustryInput] = useState(\"\");\r\n+  const MAX_INDUSTRIES = 10;\r\n+\r\n+  const addIndustry = () => {\r\n+    const value = industryInput.trim();\r\n+    if (!value) return;\r\n+    if (industries.includes(value)) {\r\n+      setIndustryInput(\"\");\r\n+      return;\r\n+    }\r\n+    if (industries.length >= MAX_INDUSTRIES) return;\r\n+    setIndustries((prev) => [...prev, value]);\r\n+    setIndustryInput(\"\");\r\n+  };\r\n+\r\n+  const removeIndustry = (idx) => {\r\n+    setIndustries((prev) => prev.filter((_, i) => i !== idx));\r\n+  };\r\n+\r\n+  const handleIndustryKey = (e) => {\r\n+    if (e.key === \"Enter\") {\r\n+      e.preventDefault();\r\n+      addIndustry();\r\n+    }\r\n+  };\r\n+\r\n+  // Experience state\r\n+  const [experiences, setExperiences] = useState([]);\r\n+\r\n+  const addExperience = () => {\r\n+    setExperiences([\r\n+      ...experiences,\r\n+      {\r\n+        id: Date.now(),\r\n+        jobTitle: \"\",\r\n+        company: \"\",\r\n+        startDate: \"\",\r\n+        endDate: \"\",\r\n+        location: \"\",\r\n+        currentlyWorking: false,\r\n+      },\r\n+    ]);\r\n+  };\r\n+\r\n+  const updateExperience = (id, field, value) => {\r\n+    setExperiences(\r\n+      experiences.map((exp) =>\r\n+        exp.id === id ? { ...exp, [field]: value } : exp\r\n+      )\r\n+    );\r\n+  };\r\n+\r\n+  const removeExperience = (id) => {\r\n+    setExperiences(experiences.filter((exp) => exp.id !== id));\r\n+  };\r\n+\r\n+  // Education state\r\n+  const [educationList, setEducationList] = useState([]);\r\n+  const addEducation = () => {\r\n+    setEducationList((prev) => [\r\n+      ...prev,\r\n+      {\r\n+        id: Date.now(),\r\n+        institution: \"\",\r\n+        degree: \"\",\r\n+        field: \"\",\r\n+        startYear: \"\",\r\n+        endYear: \"\",\r\n+      },\r\n+    ]);\r\n+  };\r\n+\r\n+  const updateEducation = (id, field, value) => {\r\n+    setEducationList((prev) =>\r\n+      prev.map((edu) => (edu.id === id ? { ...edu, [field]: value } : edu))\r\n+    );\r\n+  };\r\n+\r\n+  const removeEducation = (id) => {\r\n+    setEducationList((prev) => prev.filter((edu) => edu.id !== id));\r\n+  };\r\n+\r\n+  // Submit\r\n+  const handleRegister = async () => {\r\n+    try {\r\n+      const payload = {\r\n+        firstName,\r\n+        lastName,\r\n+        email,\r\n+        dob,\r\n+        goal: goal.toUpperCase().replace(/ /g, \"_\"),\r\n+        priorities,\r\n+        experience: experience.toUpperCase().replace(/ /g, \"_\"),\r\n+        skills,\r\n+        industries,\r\n+        linkedInProfileUrl,\r\n+        linkedInName,\r\n+        linkedInSummary,\r\n+        linkedInExperience: (experiences || []).map((exp) => ({\r\n+          title: exp.jobTitle,\r\n+          company: exp.company,\r\n+          startDate: exp.startDate,\r\n+          endDate: exp.currentlyWorking\r\n+            ? null\r\n+            : exp.endDate\r\n+            ? ${exp.endDate}-01\r\n+            : null,\r\n+          location: exp.location,\r\n+          isCurrent: exp.currentlyWorking,\r\n+        })),\r\n+        linkedInEducation: (educationList || []).map((edu) => ({\r\n+          institutionName: edu.institution,\r\n+          degree: edu.degree,\r\n+          fieldOfStudy: edu.field,\r\n+          startYear: parseInt(edu.startYear) || null,\r\n+          endYear: parseInt(edu.endYear) || null,\r\n+        })),\r\n+        linkedInSkills: skills,\r\n+        linkedInConnectionsCount: 500,\r\n+      };\r\n+\r\n+      console.log(\"Playload being sent:\", JSON.stringify(payload, null, 2));\r\n+      const data = await registerUser(payload);\r\n+      console.log(\"Registration Success:\", data);\r\n+      alert(\"User registered successfully!\");\r\n+    } catch (err) {\r\n+      console.error(\"Registration Error:\", err);\r\n+      alert(err.message || \"Registration failed\");\r\n+    }\r\n+  };\r\n+\r\n+  return {\r\n+    // States\r\n+    firstName, setFirstName,\r\n+    lastName, setLastName,\r\n+    email, setEmail,\r\n+    dob, setDob,\r\n+    goal, setGoal,\r\n+    experience, setExperience,\r\n+    priorities, setPriorities, priorityInput, setPriorityInput,\r\n+    skills, setSkills, skillInput, setSkillInput, commonSkills,\r\n+    industries, setIndustries, industryInput, setIndustryInput,\r\n+    experiences, setExperiences,\r\n+    educationList, setEducationList,\r\n+    linkedInProfileUrl, setLinkedInProfileUrl,\r\n+    linkedInName, setLinkedInName,\r\n+    linkedInSummary, setLinkedInSummary,\r\n+    // Methods\r\n+    addPriority, handlePriorityKey, removePriority,\r\n+    addSkill, handleSkillKey, removeSkill, toggleCommonSkill,\r\n+    addIndustry, removeIndustry, handleIndustryKey,\r\n+    addExperience, updateExperience, removeExperience,\r\n+    addEducation, updateEducation, removeEducation,\r\n+    handleRegister\r\n+  };\r\n+}\n\\ No newline at end of file\n"
                },
                {
                    "date": 1755443498168,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,259 @@\n+import { useState } from \"react\";\r\n+import { registerUser } from \"../../../api/register/registerApi\";\r\n+\r\n+export default function useRegisterForm() {\r\n+  // Api's\r\n+  const [firstName, setFirstName] = useState(\"\");\r\n+  const [lastName, setLastName] = useState(\"\");\r\n+  const [email, setEmail] = useState(\"\");\r\n+  const [dob, setDob] = useState(\"\");\r\n+\r\n+  const formDob = (dateStr) => {\r\n+    const [year, month, day] = dateStr.split(\"_\");\r\n+    return ${day}-${month}-${year};\r\n+  };\r\n+\r\n+  const [goal, setGoal] = useState(\"\");\r\n+  const [experience, setExperience] = useState(\"\");\r\n+\r\n+  const [linkedInProfileUrl, setLinkedInProfileUrl] = useState(\"\");\r\n+  const [linkedInName, setLinkedInName] = useState(\"\");\r\n+  const [linkedInSummary, setLinkedInSummary] = useState(\"\");\r\n+\r\n+  // priorities state\r\n+  const [priorities, setPriorities] = useState([]);\r\n+  const [priorityInput, setPriorityInput] = useState(\"\");\r\n+  const MAX_PRIORITIES = 10;\r\n+\r\n+  const addPriority = () => {\r\n+    const v = priorityInput.trim();\r\n+    if (!v) return;\r\n+    if (priorities.includes(v)) {\r\n+      setPriorityInput(\"\");\r\n+      return;\r\n+    }\r\n+    if (priorities.length >= MAX_PRIORITIES) return;\r\n+    setPriorities((p) => [...p, v]);\r\n+    setPriorityInput(\"\");\r\n+  };\r\n+\r\n+  const handlePriorityKey = (e) => {\r\n+    if (e.key === \"Enter\") {\r\n+      e.preventDefault();\r\n+      addPriority();\r\n+    }\r\n+  };\r\n+\r\n+  const removePriority = (idx) => {\r\n+    setPriorities((p) => p.filter((_, i) => i !== idx));\r\n+  };\r\n+\r\n+  // skills state\r\n+  const [skills, setSkills] = useState([]);\r\n+  const [skillInput, setSkillInput] = useState(\"\");\r\n+  const MAX_SKILLS = 10;\r\n+\r\n+  const commonSkills = [\r\n+    \"ENGINEERING\",\r\n+    \"PRODUCT\",\r\n+    \"DESIGN\",\r\n+    \"MARKETING\",\r\n+    \"SALES\",\r\n+    \"FINANCE\",\r\n+    \"OPERATIONS\",\r\n+    \"LEGAL\",\r\n+    \"HR\",\r\n+    \"STRATEGY\",\r\n+    \"DATA SCIENCE\",\r\n+    \"AI ML\",\r\n+  ];\r\n+\r\n+  const addSkill = (v) => {\r\n+    const value = (v || skillInput).trim();\r\n+    if (!value) return;\r\n+    if (skills.includes(value)) {\r\n+      setSkillInput(\"\");\r\n+      return;\r\n+    }\r\n+    if (skills.length >= MAX_SKILLS) return;\r\n+    setSkills((prev) => [...prev, value]);\r\n+    setSkillInput(\"\");\r\n+  };\r\n+\r\n+  const handleSkillKey = (e) => {\r\n+    if (e.key === \"Enter\") {\r\n+      e.preventDefault();\r\n+      addSkill();\r\n+    }\r\n+  };\r\n+\r\n+  const removeSkill = (idx) => {\r\n+    setSkills((prev) => prev.filter((_, i) => i !== idx));\r\n+  };\r\n+\r\n+  const toggleCommonSkill = (skill) => {\r\n+    if (skills.includes(skill)) {\r\n+      setSkills((prev) => prev.filter((s) => s !== skill));\r\n+    } else {\r\n+      addSkill(skill);\r\n+    }\r\n+  };\r\n+\r\n+  // Industries state\r\n+  const [industries, setIndustries] = useState([]);\r\n+  const [industryInput, setIndustryInput] = useState(\"\");\r\n+  const MAX_INDUSTRIES = 10;\r\n+\r\n+  const addIndustry = () => {\r\n+    const value = industryInput.trim();\r\n+    if (!value) return;\r\n+    if (industries.includes(value)) {\r\n+      setIndustryInput(\"\");\r\n+      return;\r\n+    }\r\n+    if (industries.length >= MAX_INDUSTRIES) return;\r\n+    setIndustries((prev) => [...prev, value]);\r\n+    setIndustryInput(\"\");\r\n+  };\r\n+\r\n+  const removeIndustry = (idx) => {\r\n+    setIndustries((prev) => prev.filter((_, i) => i !== idx));\r\n+  };\r\n+\r\n+  const handleIndustryKey = (e) => {\r\n+    if (e.key === \"Enter\") {\r\n+      e.preventDefault();\r\n+      addIndustry();\r\n+    }\r\n+  };\r\n+\r\n+  // Experience state\r\n+  const [experiences, setExperiences] = useState([]);\r\n+\r\n+  const addExperience = () => {\r\n+    setExperiences([\r\n+      ...experiences,\r\n+      {\r\n+        id: Date.now(),\r\n+        jobTitle: \"\",\r\n+        company: \"\",\r\n+        startDate: \"\",\r\n+        endDate: \"\",\r\n+        location: \"\",\r\n+        currentlyWorking: false,\r\n+      },\r\n+    ]);\r\n+  };\r\n+\r\n+  const updateExperience = (id, field, value) => {\r\n+    setExperiences(\r\n+      experiences.map((exp) =>\r\n+        exp.id === id ? { ...exp, [field]: value } : exp\r\n+      )\r\n+    );\r\n+  };\r\n+\r\n+  const removeExperience = (id) => {\r\n+    setExperiences(experiences.filter((exp) => exp.id !== id));\r\n+  };\r\n+\r\n+  // Education state\r\n+  const [educationList, setEducationList] = useState([]);\r\n+  const addEducation = () => {\r\n+    setEducationList((prev) => [\r\n+      ...prev,\r\n+      {\r\n+        id: Date.now(),\r\n+        institution: \"\",\r\n+        degree: \"\",\r\n+        field: \"\",\r\n+        startYear: \"\",\r\n+        endYear: \"\",\r\n+      },\r\n+    ]);\r\n+  };\r\n+\r\n+  const updateEducation = (id, field, value) => {\r\n+    setEducationList((prev) =>\r\n+      prev.map((edu) => (edu.id === id ? { ...edu, [field]: value } : edu))\r\n+    );\r\n+  };\r\n+\r\n+  const removeEducation = (id) => {\r\n+    setEducationList((prev) => prev.filter((edu) => edu.id !== id));\r\n+  };\r\n+\r\n+  // Submit\r\n+  const handleRegister = async () => {\r\n+    try {\r\n+      const payload = {\r\n+        firstName,\r\n+        lastName,\r\n+        email,\r\n+        dob,\r\n+        goal: goal.toUpperCase().replace(/ /g, \"_\"),\r\n+        priorities,\r\n+        experience: experience.toUpperCase().replace(/ /g, \"_\"),\r\n+        skills,\r\n+        industries,\r\n+        linkedInProfileUrl,\r\n+        linkedInName,\r\n+        linkedInSummary,\r\n+        linkedInExperience: (experiences || []).map((exp) => ({\r\n+          title: exp.jobTitle,\r\n+          company: exp.company,\r\n+          startDate: exp.startDate,\r\n+          endDate: exp.currentlyWorking\r\n+            ? null\r\n+            : exp.endDate\r\n+            ? `${exp.endDate}-01\r\n+            : null,\r\n+          location: exp.location,\r\n+          isCurrent: exp.currentlyWorking,\r\n+        })),\r\n+        linkedInEducation: (educationList || []).map((edu) => ({\r\n+          institutionName: edu.institution,\r\n+          degree: edu.degree,\r\n+          fieldOfStudy: edu.field,\r\n+          startYear: parseInt(edu.startYear) || null,\r\n+          endYear: parseInt(edu.endYear) || null,\r\n+        })),\r\n+        linkedInSkills: skills,\r\n+        linkedInConnectionsCount: 500,\r\n+      };\r\n+\r\n+      console.log(\"Playload being sent:\", JSON.stringify(payload, null, 2));\r\n+      const data = await registerUser(payload);\r\n+      console.log(\"Registration Success:\", data);\r\n+      alert(\"User registered successfully!\");\r\n+    } catch (err) {\r\n+      console.error(\"Registration Error:\", err);\r\n+      alert(err.message || \"Registration failed\");\r\n+    }\r\n+  };\r\n+\r\n+  return {\r\n+    // States\r\n+    firstName, setFirstName,\r\n+    lastName, setLastName,\r\n+    email, setEmail,\r\n+    dob, setDob,\r\n+    goal, setGoal,\r\n+    experience, setExperience,\r\n+    priorities, setPriorities, priorityInput, setPriorityInput,\r\n+    skills, setSkills, skillInput, setSkillInput, commonSkills,\r\n+    industries, setIndustries, industryInput, setIndustryInput,\r\n+    experiences, setExperiences,\r\n+    educationList, setEducationList,\r\n+    linkedInProfileUrl, setLinkedInProfileUrl,\r\n+    linkedInName, setLinkedInName,\r\n+    linkedInSummary, setLinkedInSummary,\r\n+    // Methods\r\n+    addPriority, handlePriorityKey, removePriority,\r\n+    addSkill, handleSkillKey, removeSkill, toggleCommonSkill,\r\n+    addIndustry, removeIndustry, handleIndustryKey,\r\n+    addExperience, updateExperience, removeExperience,\r\n+    addEducation, updateEducation, removeEducation,\r\n+    handleRegister\r\n+  };\r\n+}\n\\ No newline at end of file\n"
                },
                {
                    "date": 1755443637231,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,259 @@\n+import { useState } from \"react\";\r\n+import { registerUser } from \"../../../api/register/registerApi\";\r\n+\r\n+export default function useRegisterForm() {\r\n+  // Api's\r\n+  const [firstName, setFirstName] = useState(\"\");\r\n+  const [lastName, setLastName] = useState(\"\");\r\n+  const [email, setEmail] = useState(\"\");\r\n+  const [dob, setDob] = useState(\"\");\r\n+\r\n+  const formDob = (dateStr) => {\r\n+    const [year, month, day] = dateStr.split(\"_\");\r\n+    return `${day}-${month}-${year};\r\n+  };\r\n+\r\n+  const [goal, setGoal] = useState(\"\");\r\n+  const [experience, setExperience] = useState(\"\");\r\n+\r\n+  const [linkedInProfileUrl, setLinkedInProfileUrl] = useState(\"\");\r\n+  const [linkedInName, setLinkedInName] = useState(\"\");\r\n+  const [linkedInSummary, setLinkedInSummary] = useState(\"\");\r\n+\r\n+  // priorities state\r\n+  const [priorities, setPriorities] = useState([]);\r\n+  const [priorityInput, setPriorityInput] = useState(\"\");\r\n+  const MAX_PRIORITIES = 10;\r\n+\r\n+  const addPriority = () => {\r\n+    const v = priorityInput.trim();\r\n+    if (!v) return;\r\n+    if (priorities.includes(v)) {\r\n+      setPriorityInput(\"\");\r\n+      return;\r\n+    }\r\n+    if (priorities.length >= MAX_PRIORITIES) return;\r\n+    setPriorities((p) => [...p, v]);\r\n+    setPriorityInput(\"\");\r\n+  };\r\n+\r\n+  const handlePriorityKey = (e) => {\r\n+    if (e.key === \"Enter\") {\r\n+      e.preventDefault();\r\n+      addPriority();\r\n+    }\r\n+  };\r\n+\r\n+  const removePriority = (idx) => {\r\n+    setPriorities((p) => p.filter((_, i) => i !== idx));\r\n+  };\r\n+\r\n+  // skills state\r\n+  const [skills, setSkills] = useState([]);\r\n+  const [skillInput, setSkillInput] = useState(\"\");\r\n+  const MAX_SKILLS = 10;\r\n+\r\n+  const commonSkills = [\r\n+    \"ENGINEERING\",\r\n+    \"PRODUCT\",\r\n+    \"DESIGN\",\r\n+    \"MARKETING\",\r\n+    \"SALES\",\r\n+    \"FINANCE\",\r\n+    \"OPERATIONS\",\r\n+    \"LEGAL\",\r\n+    \"HR\",\r\n+    \"STRATEGY\",\r\n+    \"DATA SCIENCE\",\r\n+    \"AI ML\",\r\n+  ];\r\n+\r\n+  const addSkill = (v) => {\r\n+    const value = (v || skillInput).trim();\r\n+    if (!value) return;\r\n+    if (skills.includes(value)) {\r\n+      setSkillInput(\"\");\r\n+      return;\r\n+    }\r\n+    if (skills.length >= MAX_SKILLS) return;\r\n+    setSkills((prev) => [...prev, value]);\r\n+    setSkillInput(\"\");\r\n+  };\r\n+\r\n+  const handleSkillKey = (e) => {\r\n+    if (e.key === \"Enter\") {\r\n+      e.preventDefault();\r\n+      addSkill();\r\n+    }\r\n+  };\r\n+\r\n+  const removeSkill = (idx) => {\r\n+    setSkills((prev) => prev.filter((_, i) => i !== idx));\r\n+  };\r\n+\r\n+  const toggleCommonSkill = (skill) => {\r\n+    if (skills.includes(skill)) {\r\n+      setSkills((prev) => prev.filter((s) => s !== skill));\r\n+    } else {\r\n+      addSkill(skill);\r\n+    }\r\n+  };\r\n+\r\n+  // Industries state\r\n+  const [industries, setIndustries] = useState([]);\r\n+  const [industryInput, setIndustryInput] = useState(\"\");\r\n+  const MAX_INDUSTRIES = 10;\r\n+\r\n+  const addIndustry = () => {\r\n+    const value = industryInput.trim();\r\n+    if (!value) return;\r\n+    if (industries.includes(value)) {\r\n+      setIndustryInput(\"\");\r\n+      return;\r\n+    }\r\n+    if (industries.length >= MAX_INDUSTRIES) return;\r\n+    setIndustries((prev) => [...prev, value]);\r\n+    setIndustryInput(\"\");\r\n+  };\r\n+\r\n+  const removeIndustry = (idx) => {\r\n+    setIndustries((prev) => prev.filter((_, i) => i !== idx));\r\n+  };\r\n+\r\n+  const handleIndustryKey = (e) => {\r\n+    if (e.key === \"Enter\") {\r\n+      e.preventDefault();\r\n+      addIndustry();\r\n+    }\r\n+  };\r\n+\r\n+  // Experience state\r\n+  const [experiences, setExperiences] = useState([]);\r\n+\r\n+  const addExperience = () => {\r\n+    setExperiences([\r\n+      ...experiences,\r\n+      {\r\n+        id: Date.now(),\r\n+        jobTitle: \"\",\r\n+        company: \"\",\r\n+        startDate: \"\",\r\n+        endDate: \"\",\r\n+        location: \"\",\r\n+        currentlyWorking: false,\r\n+      },\r\n+    ]);\r\n+  };\r\n+\r\n+  const updateExperience = (id, field, value) => {\r\n+    setExperiences(\r\n+      experiences.map((exp) =>\r\n+        exp.id === id ? { ...exp, [field]: value } : exp\r\n+      )\r\n+    );\r\n+  };\r\n+\r\n+  const removeExperience = (id) => {\r\n+    setExperiences(experiences.filter((exp) => exp.id !== id));\r\n+  };\r\n+\r\n+  // Education state\r\n+  const [educationList, setEducationList] = useState([]);\r\n+  const addEducation = () => {\r\n+    setEducationList((prev) => [\r\n+      ...prev,\r\n+      {\r\n+        id: Date.now(),\r\n+        institution: \"\",\r\n+        degree: \"\",\r\n+        field: \"\",\r\n+        startYear: \"\",\r\n+        endYear: \"\",\r\n+      },\r\n+    ]);\r\n+  };\r\n+\r\n+  const updateEducation = (id, field, value) => {\r\n+    setEducationList((prev) =>\r\n+      prev.map((edu) => (edu.id === id ? { ...edu, [field]: value } : edu))\r\n+    );\r\n+  };\r\n+\r\n+  const removeEducation = (id) => {\r\n+    setEducationList((prev) => prev.filter((edu) => edu.id !== id));\r\n+  };\r\n+\r\n+  // Submit\r\n+  const handleRegister = async () => {\r\n+    try {\r\n+      const payload = {\r\n+        firstName,\r\n+        lastName,\r\n+        email,\r\n+        dob,\r\n+        goal: goal.toUpperCase().replace(/ /g, \"_\"),\r\n+        priorities,\r\n+        experience: experience.toUpperCase().replace(/ /g, \"_\"),\r\n+        skills,\r\n+        industries,\r\n+        linkedInProfileUrl,\r\n+        linkedInName,\r\n+        linkedInSummary,\r\n+        linkedInExperience: (experiences || []).map((exp) => ({\r\n+          title: exp.jobTitle,\r\n+          company: exp.company,\r\n+          startDate: exp.startDate,\r\n+          endDate: exp.currentlyWorking\r\n+            ? null\r\n+            : exp.endDate\r\n+            ? `${exp.endDate}-01`\r\n+            : null,\r\n+          location: exp.location,\r\n+          isCurrent: exp.currentlyWorking,\r\n+        })),\r\n+        linkedInEducation: (educationList || []).map((edu) => ({\r\n+          institutionName: edu.institution,\r\n+          degree: edu.degree,\r\n+          fieldOfStudy: edu.field,\r\n+          startYear: parseInt(edu.startYear) || null,\r\n+          endYear: parseInt(edu.endYear) || null,\r\n+        })),\r\n+        linkedInSkills: skills,\r\n+        linkedInConnectionsCount: 500,\r\n+      };\r\n+\r\n+      console.log(\"Playload being sent:\", JSON.stringify(payload, null, 2));\r\n+      const data = await registerUser(payload);\r\n+      console.log(\"Registration Success:\", data);\r\n+      alert(\"User registered successfully!\");\r\n+    } catch (err) {\r\n+      console.error(\"Registration Error:\", err);\r\n+      alert(err.message || \"Registration failed\");\r\n+    }\r\n+  };\r\n+\r\n+  return {\r\n+    // States\r\n+    firstName, setFirstName,\r\n+    lastName, setLastName,\r\n+    email, setEmail,\r\n+    dob, setDob,\r\n+    goal, setGoal,\r\n+    experience, setExperience,\r\n+    priorities, setPriorities, priorityInput, setPriorityInput,\r\n+    skills, setSkills, skillInput, setSkillInput, commonSkills,\r\n+    industries, setIndustries, industryInput, setIndustryInput,\r\n+    experiences, setExperiences,\r\n+    educationList, setEducationList,\r\n+    linkedInProfileUrl, setLinkedInProfileUrl,\r\n+    linkedInName, setLinkedInName,\r\n+    linkedInSummary, setLinkedInSummary,\r\n+    // Methods\r\n+    addPriority, handlePriorityKey, removePriority,\r\n+    addSkill, handleSkillKey, removeSkill, toggleCommonSkill,\r\n+    addIndustry, removeIndustry, handleIndustryKey,\r\n+    addExperience, updateExperience, removeExperience,\r\n+    addEducation, updateEducation, removeEducation,\r\n+    handleRegister\r\n+  };\r\n+}\n\\ No newline at end of file\n"
                },
                {
                    "date": 1755444241956,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -9,9 +9,9 @@\n   const [dob, setDob] = useState(\"\");\r\n \r\n   const formDob = (dateStr) => {\r\n     const [year, month, day] = dateStr.split(\"_\");\r\n-    return `${day}-${month}-${year};\r\n+    return `${day}-${month}-${year}`;\r\n   };\r\n \r\n   const [goal, setGoal] = useState(\"\");\r\n   const [experience, setExperience] = useState(\"\");\r\n@@ -254,685 +254,6 @@\n     addIndustry, removeIndustry, handleIndustryKey,\r\n     addExperience, updateExperience, removeExperience,\r\n     addEducation, updateEducation, removeEducation,\r\n     handleRegister\r\n-  };\r\n-}\n-import { useState } from \"react\";\r\n-import { registerUser } from \"../../../api/register/registerApi\";\r\n-\r\n-export default function useRegisterForm() {\r\n-  // Api's\r\n-  const [firstName, setFirstName] = useState(\"\");\r\n-  const [lastName, setLastName] = useState(\"\");\r\n-  const [email, setEmail] = useState(\"\");\r\n-  const [dob, setDob] = useState(\"\");\r\n-\r\n-  const formDob = (dateStr) => {\r\n-    const [year, month, day] = dateStr.split(\"_\");\r\n-    return ${day}-${month}-${year};\r\n-  };\r\n-\r\n-  const [goal, setGoal] = useState(\"\");\r\n-  const [experience, setExperience] = useState(\"\");\r\n-\r\n-  const [linkedInProfileUrl, setLinkedInProfileUrl] = useState(\"\");\r\n-  const [linkedInName, setLinkedInName] = useState(\"\");\r\n-  const [linkedInSummary, setLinkedInSummary] = useState(\"\");\r\n-\r\n-  // priorities state\r\n-  const [priorities, setPriorities] = useState([]);\r\n-  const [priorityInput, setPriorityInput] = useState(\"\");\r\n-  const MAX_PRIORITIES = 10;\r\n-\r\n-  const addPriority = () => {\r\n-    const v = priorityInput.trim();\r\n-    if (!v) return;\r\n-    if (priorities.includes(v)) {\r\n-      setPriorityInput(\"\");\r\n-      return;\r\n-    }\r\n-    if (priorities.length >= MAX_PRIORITIES) return;\r\n-    setPriorities((p) => [...p, v]);\r\n-    setPriorityInput(\"\");\r\n-  };\r\n-\r\n-  const handlePriorityKey = (e) => {\r\n-    if (e.key === \"Enter\") {\r\n-      e.preventDefault();\r\n-      addPriority();\r\n-    }\r\n-  };\r\n-\r\n-  const removePriority = (idx) => {\r\n-    setPriorities((p) => p.filter((_, i) => i !== idx));\r\n-  };\r\n-\r\n-  // skills state\r\n-  const [skills, setSkills] = useState([]);\r\n-  const [skillInput, setSkillInput] = useState(\"\");\r\n-  const MAX_SKILLS = 10;\r\n-\r\n-  const commonSkills = [\r\n-    \"ENGINEERING\",\r\n-    \"PRODUCT\",\r\n-    \"DESIGN\",\r\n-    \"MARKETING\",\r\n-    \"SALES\",\r\n-    \"FINANCE\",\r\n-    \"OPERATIONS\",\r\n-    \"LEGAL\",\r\n-    \"HR\",\r\n-    \"STRATEGY\",\r\n-    \"DATA SCIENCE\",\r\n-    \"AI ML\",\r\n-  ];\r\n-\r\n-  const addSkill = (v) => {\r\n-    const value = (v || skillInput).trim();\r\n-    if (!value) return;\r\n-    if (skills.includes(value)) {\r\n-      setSkillInput(\"\");\r\n-      return;\r\n-    }\r\n-    if (skills.length >= MAX_SKILLS) return;\r\n-    setSkills((prev) => [...prev, value]);\r\n-    setSkillInput(\"\");\r\n-  };\r\n-\r\n-  const handleSkillKey = (e) => {\r\n-    if (e.key === \"Enter\") {\r\n-      e.preventDefault();\r\n-      addSkill();\r\n-    }\r\n-  };\r\n-\r\n-  const removeSkill = (idx) => {\r\n-    setSkills((prev) => prev.filter((_, i) => i !== idx));\r\n-  };\r\n-\r\n-  const toggleCommonSkill = (skill) => {\r\n-    if (skills.includes(skill)) {\r\n-      setSkills((prev) => prev.filter((s) => s !== skill));\r\n-    } else {\r\n-      addSkill(skill);\r\n-    }\r\n-  };\r\n-\r\n-  // Industries state\r\n-  const [industries, setIndustries] = useState([]);\r\n-  const [industryInput, setIndustryInput] = useState(\"\");\r\n-  const MAX_INDUSTRIES = 10;\r\n-\r\n-  const addIndustry = () => {\r\n-    const value = industryInput.trim();\r\n-    if (!value) return;\r\n-    if (industries.includes(value)) {\r\n-      setIndustryInput(\"\");\r\n-      return;\r\n-    }\r\n-    if (industries.length >= MAX_INDUSTRIES) return;\r\n-    setIndustries((prev) => [...prev, value]);\r\n-    setIndustryInput(\"\");\r\n-  };\r\n-\r\n-  const removeIndustry = (idx) => {\r\n-    setIndustries((prev) => prev.filter((_, i) => i !== idx));\r\n-  };\r\n-\r\n-  const handleIndustryKey = (e) => {\r\n-    if (e.key === \"Enter\") {\r\n-      e.preventDefault();\r\n-      addIndustry();\r\n-    }\r\n-  };\r\n-\r\n-  // Experience state\r\n-  const [experiences, setExperiences] = useState([]);\r\n-\r\n-  const addExperience = () => {\r\n-    setExperiences([\r\n-      ...experiences,\r\n-      {\r\n-        id: Date.now(),\r\n-        jobTitle: \"\",\r\n-        company: \"\",\r\n-        startDate: \"\",\r\n-        endDate: \"\",\r\n-        location: \"\",\r\n-        currentlyWorking: false,\r\n-      },\r\n-    ]);\r\n-  };\r\n-\r\n-  const updateExperience = (id, field, value) => {\r\n-    setExperiences(\r\n-      experiences.map((exp) =>\r\n-        exp.id === id ? { ...exp, [field]: value } : exp\r\n-      )\r\n-    );\r\n-  };\r\n-\r\n-  const removeExperience = (id) => {\r\n-    setExperiences(experiences.filter((exp) => exp.id !== id));\r\n-  };\r\n-\r\n-  // Education state\r\n-  const [educationList, setEducationList] = useState([]);\r\n-  const addEducation = () => {\r\n-    setEducationList((prev) => [\r\n-      ...prev,\r\n-      {\r\n-        id: Date.now(),\r\n-        institution: \"\",\r\n-        degree: \"\",\r\n-        field: \"\",\r\n-        startYear: \"\",\r\n-        endYear: \"\",\r\n-      },\r\n-    ]);\r\n-  };\r\n-\r\n-  const updateEducation = (id, field, value) => {\r\n-    setEducationList((prev) =>\r\n-      prev.map((edu) => (edu.id === id ? { ...edu, [field]: value } : edu))\r\n-    );\r\n-  };\r\n-\r\n-  const removeEducation = (id) => {\r\n-    setEducationList((prev) => prev.filter((edu) => edu.id !== id));\r\n-  };\r\n-\r\n-  // Submit\r\n-  const handleRegister = async () => {\r\n-    try {\r\n-      const payload = {\r\n-        firstName,\r\n-        lastName,\r\n-        email,\r\n-        dob,\r\n-        goal: goal.toUpperCase().replace(/ /g, \"_\"),\r\n-        priorities,\r\n-        experience: experience.toUpperCase().replace(/ /g, \"_\"),\r\n-        skills,\r\n-        industries,\r\n-        linkedInProfileUrl,\r\n-        linkedInName,\r\n-        linkedInSummary,\r\n-        linkedInExperience: (experiences || []).map((exp) => ({\r\n-          title: exp.jobTitle,\r\n-          company: exp.company,\r\n-          startDate: exp.startDate,\r\n-          endDate: exp.currentlyWorking\r\n-            ? null\r\n-            : exp.endDate\r\n-            ? `${exp.endDate}-01\r\n-            : null,\r\n-          location: exp.location,\r\n-          isCurrent: exp.currentlyWorking,\r\n-        })),\r\n-        linkedInEducation: (educationList || []).map((edu) => ({\r\n-          institutionName: edu.institution,\r\n-          degree: edu.degree,\r\n-          fieldOfStudy: edu.field,\r\n-          startYear: parseInt(edu.startYear) || null,\r\n-          endYear: parseInt(edu.endYear) || null,\r\n-        })),\r\n-        linkedInSkills: skills,\r\n-        linkedInConnectionsCount: 500,\r\n-      };\r\n-\r\n-      console.log(\"Playload being sent:\", JSON.stringify(payload, null, 2));\r\n-      const data = await registerUser(payload);\r\n-      console.log(\"Registration Success:\", data);\r\n-      alert(\"User registered successfully!\");\r\n-    } catch (err) {\r\n-      console.error(\"Registration Error:\", err);\r\n-      alert(err.message || \"Registration failed\");\r\n-    }\r\n-  };\r\n-\r\n-  return {\r\n-    // States\r\n-    firstName, setFirstName,\r\n-    lastName, setLastName,\r\n-    email, setEmail,\r\n-    dob, setDob,\r\n-    goal, setGoal,\r\n-    experience, setExperience,\r\n-    priorities, setPriorities, priorityInput, setPriorityInput,\r\n-    skills, setSkills, skillInput, setSkillInput, commonSkills,\r\n-    industries, setIndustries, industryInput, setIndustryInput,\r\n-    experiences, setExperiences,\r\n-    educationList, setEducationList,\r\n-    linkedInProfileUrl, setLinkedInProfileUrl,\r\n-    linkedInName, setLinkedInName,\r\n-    linkedInSummary, setLinkedInSummary,\r\n-    // Methods\r\n-    addPriority, handlePriorityKey, removePriority,\r\n-    addSkill, handleSkillKey, removeSkill, toggleCommonSkill,\r\n-    addIndustry, removeIndustry, handleIndustryKey,\r\n-    addExperience, updateExperience, removeExperience,\r\n-    addEducation, updateEducation, removeEducation,\r\n-    handleRegister\r\n-  };\r\n-}\n-import { useState } from \"react\";\r\n-import { registerUser } from \"../../../api/register/registerApi\";\r\n-\r\n-export default function useRegisterForm() {\r\n-  // Api's\r\n-  const [firstName, setFirstName] = useState(\"\");\r\n-  const [lastName, setLastName] = useState(\"\");\r\n-  const [email, setEmail] = useState(\"\");\r\n-  const [dob, setDob] = useState(\"\");\r\n-\r\n-  const formDob = (dateStr) => {\r\n-    const [year, month, day] = dateStr.split(\"_\");\r\n-    return ${day}-${month}-${year};\r\n-  };\r\n-\r\n-  const [goal, setGoal] = useState(\"\");\r\n-  const [experience, setExperience] = useState(\"\");\r\n-\r\n-  const [linkedInProfileUrl, setLinkedInProfileUrl] = useState(\"\");\r\n-  const [linkedInName, setLinkedInName] = useState(\"\");\r\n-  const [linkedInSummary, setLinkedInSummary] = useState(\"\");\r\n-\r\n-  // priorities state\r\n-  const [priorities, setPriorities] = useState([]);\r\n-  const [priorityInput, setPriorityInput] = useState(\"\");\r\n-  const MAX_PRIORITIES = 10;\r\n-\r\n-  const addPriority = () => {\r\n-    const v = priorityInput.trim();\r\n-    if (!v) return;\r\n-    if (priorities.includes(v)) {\r\n-      setPriorityInput(\"\");\r\n-      return;\r\n-    }\r\n-    if (priorities.length >= MAX_PRIORITIES) return;\r\n-    setPriorities((p) => [...p, v]);\r\n-    setPriorityInput(\"\");\r\n-  };\r\n-\r\n-  const handlePriorityKey = (e) => {\r\n-    if (e.key === \"Enter\") {\r\n-      e.preventDefault();\r\n-      addPriority();\r\n-    }\r\n-  };\r\n-\r\n-  const removePriority = (idx) => {\r\n-    setPriorities((p) => p.filter((_, i) => i !== idx));\r\n-  };\r\n-\r\n-  // skills state\r\n-  const [skills, setSkills] = useState([]);\r\n-  const [skillInput, setSkillInput] = useState(\"\");\r\n-  const MAX_SKILLS = 10;\r\n-\r\n-  const commonSkills = [\r\n-    \"ENGINEERING\",\r\n-    \"PRODUCT\",\r\n-    \"DESIGN\",\r\n-    \"MARKETING\",\r\n-    \"SALES\",\r\n-    \"FINANCE\",\r\n-    \"OPERATIONS\",\r\n-    \"LEGAL\",\r\n-    \"HR\",\r\n-    \"STRATEGY\",\r\n-    \"DATA SCIENCE\",\r\n-    \"AI ML\",\r\n-  ];\r\n-\r\n-  const addSkill = (v) => {\r\n-    const value = (v || skillInput).trim();\r\n-    if (!value) return;\r\n-    if (skills.includes(value)) {\r\n-      setSkillInput(\"\");\r\n-      return;\r\n-    }\r\n-    if (skills.length >= MAX_SKILLS) return;\r\n-    setSkills((prev) => [...prev, value]);\r\n-    setSkillInput(\"\");\r\n-  };\r\n-\r\n-  const handleSkillKey = (e) => {\r\n-    if (e.key === \"Enter\") {\r\n-      e.preventDefault();\r\n-      addSkill();\r\n-    }\r\n-  };\r\n-\r\n-  const removeSkill = (idx) => {\r\n-    setSkills((prev) => prev.filter((_, i) => i !== idx));\r\n-  };\r\n-\r\n-  const toggleCommonSkill = (skill) => {\r\n-    if (skills.includes(skill)) {\r\n-      setSkills((prev) => prev.filter((s) => s !== skill));\r\n-    } else {\r\n-      addSkill(skill);\r\n-    }\r\n-  };\r\n-\r\n-  // Industries state\r\n-  const [industries, setIndustries] = useState([]);\r\n-  const [industryInput, setIndustryInput] = useState(\"\");\r\n-  const MAX_INDUSTRIES = 10;\r\n-\r\n-  const addIndustry = () => {\r\n-    const value = industryInput.trim();\r\n-    if (!value) return;\r\n-    if (industries.includes(value)) {\r\n-      setIndustryInput(\"\");\r\n-      return;\r\n-    }\r\n-    if (industries.length >= MAX_INDUSTRIES) return;\r\n-    setIndustries((prev) => [...prev, value]);\r\n-    setIndustryInput(\"\");\r\n-  };\r\n-\r\n-  const removeIndustry = (idx) => {\r\n-    setIndustries((prev) => prev.filter((_, i) => i !== idx));\r\n-  };\r\n-\r\n-  const handleIndustryKey = (e) => {\r\n-    if (e.key === \"Enter\") {\r\n-      e.preventDefault();\r\n-      addIndustry();\r\n-    }\r\n-  };\r\n-\r\n-  // Experience state\r\n-  const [experiences, setExperiences] = useState([]);\r\n-\r\n-  const addExperience = () => {\r\n-    setExperiences([\r\n-      ...experiences,\r\n-      {\r\n-        id: Date.now(),\r\n-        jobTitle: \"\",\r\n-        company: \"\",\r\n-        startDate: \"\",\r\n-        endDate: \"\",\r\n-        location: \"\",\r\n-        currentlyWorking: false,\r\n-      },\r\n-    ]);\r\n-  };\r\n-\r\n-  const updateExperience = (id, field, value) => {\r\n-    setExperiences(\r\n-      experiences.map((exp) =>\r\n-        exp.id === id ? { ...exp, [field]: value } : exp\r\n-      )\r\n-    );\r\n-  };\r\n-\r\n-  const removeExperience = (id) => {\r\n-    setExperiences(experiences.filter((exp) => exp.id !== id));\r\n-  };\r\n-\r\n-  // Education state\r\n-  const [educationList, setEducationList] = useState([]);\r\n-  const addEducation = () => {\r\n-    setEducationList((prev) => [\r\n-      ...prev,\r\n-      {\r\n-        id: Date.now(),\r\n-        institution: \"\",\r\n-        degree: \"\",\r\n-        field: \"\",\r\n-        startYear: \"\",\r\n-        endYear: \"\",\r\n-      },\r\n-    ]);\r\n-  };\r\n-\r\n-  const updateEducation = (id, field, value) => {\r\n-    setEducationList((prev) =>\r\n-      prev.map((edu) => (edu.id === id ? { ...edu, [field]: value } : edu))\r\n-    );\r\n-  };\r\n-\r\n-  const removeEducation = (id) => {\r\n-    setEducationList((prev) => prev.filter((edu) => edu.id !== id));\r\n-  };\r\n-\r\n-  // Submit\r\n-  const handleRegister = async () => {\r\n-    try {\r\n-      const payload = {\r\n-        firstName,\r\n-        lastName,\r\n-        email,\r\n-        dob,\r\n-        goal: goal.toUpperCase().replace(/ /g, \"_\"),\r\n-        priorities,\r\n-        experience: experience.toUpperCase().replace(/ /g, \"_\"),\r\n-        skills,\r\n-        industries,\r\n-        linkedInProfileUrl,\r\n-        linkedInName,\r\n-        linkedInSummary,\r\n-        linkedInExperience: (experiences || []).map((exp) => ({\r\n-          title: exp.jobTitle,\r\n-          company: exp.company,\r\n-          startDate: exp.startDate,\r\n-          endDate: exp.currentlyWorking\r\n-            ? null\r\n-            : exp.endDate\r\n-            ? ${exp.endDate}-01\r\n-            : null,\r\n-          location: exp.location,\r\n-          isCurrent: exp.currentlyWorking,\r\n-        })),\r\n-        linkedInEducation: (educationList || []).map((edu) => ({\r\n-          institutionName: edu.institution,\r\n-          degree: edu.degree,\r\n-          fieldOfStudy: edu.field,\r\n-          startYear: parseInt(edu.startYear) || null,\r\n-          endYear: parseInt(edu.endYear) || null,\r\n-        })),\r\n-        linkedInSkills: skills,\r\n-        linkedInConnectionsCount: 500,\r\n-      };\r\n-\r\n-      console.log(\"Playload being sent:\", JSON.stringify(payload, null, 2));\r\n-      const data = await registerUser(payload);\r\n-      console.log(\"Registration Success:\", data);\r\n-      alert(\"User registered successfully!\");\r\n-    } catch (err) {\r\n-      console.error(\"Registration Error:\", err);\r\n-      alert(err.message || \"Registration failed\");\r\n-    }\r\n-  };\r\n-\r\n-  return {\r\n-    // States\r\n-    firstName, setFirstName,\r\n-    lastName, setLastName,\r\n-    email, setEmail,\r\n-    dob, setDob,\r\n-    goal, setGoal,\r\n-    experience, setExperience,\r\n-    priorities, setPriorities, priorityInput, setPriorityInput,\r\n-    skills, setSkills, skillInput, setSkillInput, commonSkills,\r\n-    industries, setIndustries, industryInput, setIndustryInput,\r\n-    experiences, setExperiences,\r\n-    educationList, setEducationList,\r\n-    linkedInProfileUrl, setLinkedInProfileUrl,\r\n-    linkedInName, setLinkedInName,\r\n-    linkedInSummary, setLinkedInSummary,\r\n-    // Methods\r\n-    addPriority, handlePriorityKey, removePriority,\r\n-    addSkill, handleSkillKey, removeSkill, toggleCommonSkill,\r\n-    addIndustry, removeIndustry, handleIndustryKey,\r\n-    addExperience, updateExperience, removeExperience,\r\n-    addEducation, updateEducation, removeEducation,\r\n-    handleRegister\r\n-  };\r\n-}\n-import { useState } from \"react\";\r\n-import { registerUser } from \"../../../api/register/registerApi\";\r\n-\r\n-export default function useRegisterForm() {\r\n-  // Api's\r\n-  const [firstName, setFirstName] = useState(\"\");\r\n-  const [lastName, setLastName] = useState(\"\");\r\n-  const [email, setEmail] = useState(\"\");\r\n-  const [dob, setDob] = useState(\"\");\r\n-\r\n-  const formDob = (dateStr) => {\r\n-    const [year, month, day] = dateStr.split(\"_\");\r\n-    return ${day}-${month}-${year};\r\n-  };\r\n-\r\n-  const [goal, setGoal] = useState(\"\");\r\n-  const [experience, setExperience] = useState(\"\");\r\n-\r\n-  const [linkedInProfileUrl, setLinkedInProfileUrl] = useState(\"\");\r\n-  const [linkedInName, setLinkedInName] = useState(\"\");\r\n-  const [linkedInSummary, setLinkedInSummary] = useState(\"\");\r\n-\r\n-  // priorities state\r\n-  const [priorities, setPriorities] = useState([]);\r\n-  const [priorityInput, setPriorityInput] = useState(\"\");\r\n-  const MAX_PRIORITIES = 10;\r\n-\r\n-  const addPriority = () => {\r\n-    const v = priorityInput.trim();\r\n-    if (!v) return;\r\n-    if (priorities.includes(v)) {\r\n-      setPriorityInput(\"\");\r\n-      return;\r\n-    }\r\n-    if (priorities.length >= MAX_PRIORITIES) return;\r\n-    setPriorities((p) => [...p, v]);\r\n-    setPriorityInput(\"\");\r\n-  };\r\n-\r\n-  const handlePriorityKey = (e) => {\r\n-    if (e.key === \"Enter\") {\r\n-      e.preventDefault();\r\n-      addPriority();\r\n-    }\r\n-  };\r\n-\r\n-  const removePriority = (idx) => {\r\n-    setPriorities((p) => p.filter((_, i) => i !== idx));\r\n-  };\r\n-\r\n-  // skills state\r\n-  const [skills, setSkills] = useState([]);\r\n-  const [skillInput, setSkillInput] = useState(\"\");\r\n-  const MAX_SKILLS = 10;\r\n-\r\n-  const commonSkills = [\r\n-    \"ENGINEERING\",\r\n-    \"PRODUCT\",\r\n-    \"DESIGN\",\r\n-    \"MARKETING\",\r\n-    \"SALES\",\r\n-    \"FINANCE\",\r\n-    \"OPERATIONS\",\r\n-    \"LEGAL\",\r\n-    \"HR\",\r\n-    \"STRATEGY\",\r\n-    \"DATA SCIENCE\",\r\n-    \"AI ML\",\r\n-  ];\r\n-\r\n-  const addSkill = (v) => {\r\n-    const value = (v || skillInput).trim();\r\n-    if (!value) return;\r\n-    if (skills.includes(value)) {\r\n-      setSkillInput(\"\");\r\n-      return;\r\n-    }\r\n-    if (skills.length >= MAX_SKILLS) return;\r\n-    setSkills((prev) => [...prev, value]);\r\n-    setSkillInput(\"\");\r\n-  };\r\n-\r\n-  const handleSkillKey = (e) => {\r\n-    if (e.key === \"Enter\") {\r\n-      e.preventDefault();\r\n-      addSkill();\r\n-    }\r\n-  };\r\n-\r\n-  const removeSkill = (idx) => {\r\n-    setSkills((prev) => prev.filter((_, i) => i !== idx));\r\n-  };\r\n-\r\n-  const toggleCommonSkill = (skill) => {\r\n-    if (skills.includes(skill)) {\r\n-      setSkills((prev) => prev.filter((s) => s !== skill));\r\n-    } else {\r\n-      addSkill(skill);\r\n-    }\r\n-  };\r\n-\r\n-  // Industries state\r\n-  const [industries, setIndustries] = useState([]);\r\n-  const [industryInput, setIndustryInput] = useState(\"\");\r\n-  const MAX_INDUSTRIES = 10;\r\n-\r\n-  const addIndustry = () => {\r\n-    const value = industryInput.trim();\r\n-    if (!value) return;\r\n-    if (industries.includes(value)) {\r\n-      setIndustryInput(\"\");\r\n-      return;\r\n-    }\r\n-    if (industries.length >= MAX_INDUSTRIES) return;\r\n-    setIndustries((prev) => [...prev, value]);\r\n-    setIndustryInput(\"\");\r\n-  };\r\n-\r\n-  const removeIndustry = (idx) => {\r\n-    setIndustries((prev) => prev.filter((_, i) => i !== idx));\r\n-  };\r\n-\r\n-  const handleIndustryKey = (e) => {\r\n-    if (e.key === \"Enter\") {\r\n-      e.preventDefault();\r\n-      addIndustry();\r\n-    }\r\n-  };\r\n-\r\n-  // Experience state\r\n-  const [experiences, setExperiences] = useState([]);\r\n-\r\n-  const addExperience = () => {\r\n-    setExperiences([\r\n-      ...experiences,\r\n-      {\r\n-        id: Date.now(),\r\n-        jobTitle: \"\",\r\n-        company: \"\",\r\n-        startDate: \"\",\r\n-        endDate: \"\",\r\n-        location: \"\",\r\n-        currentlyWorking: false,\r\n-      },\r\n-    ]);\r\n-  };\r\n-\r\n-  const updateExperience = (id, field, value) => {\r\n-    setExperiences(\r\n-      experiences.map((exp) =>\r\n-        exp.id === id ? { ...exp, [field]: value } : exp\r\n-      )\r\n-    );\r\n-  };\r\n-\r\n-  const removeExperience = (id) => {\r\n-    setExperiences(experiences.filter((exp) => exp.id !== id));\r\n-  };\r\n-\r\n-  // Education state\r\n-  const [educationList, setEducationList] = useState([]);\n\\ No newline at end of file\n+  };,\r\n+}\n\\ No newline at end of file\n"
                },
                {
                    "date": 1755444268232,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -253,7 +253,10 @@\n     addSkill, handleSkillKey, removeSkill, toggleCommonSkill,\r\n     addIndustry, removeIndustry, handleIndustryKey,\r\n     addExperience, updateExperience, removeExperience,\r\n     addEducation, updateEducation, removeEducation,\r\n-    handleRegister\r\n-  };,\r\n+    handleRegister,\r\n+      MAX_PRIORITIES,\r\n+  MAX_SKILLS,\r\n+  MAX_INDUSTRIES\r\n+  };\r\n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1755444275951,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -233,30 +233,62 @@\n   };\r\n \r\n   return {\r\n     // States\r\n-    firstName, setFirstName,\r\n-    lastName, setLastName,\r\n-    email, setEmail,\r\n-    dob, setDob,\r\n-    goal, setGoal,\r\n-    experience, setExperience,\r\n-    priorities, setPriorities, priorityInput, setPriorityInput,\r\n-    skills, setSkills, skillInput, setSkillInput, commonSkills,\r\n-    industries, setIndustries, industryInput, setIndustryInput,\r\n-    experiences, setExperiences,\r\n-    educationList, setEducationList,\r\n-    linkedInProfileUrl, setLinkedInProfileUrl,\r\n-    linkedInName, setLinkedInName,\r\n-    linkedInSummary, setLinkedInSummary,\r\n+    firstName,\r\n+    setFirstName,\r\n+    lastName,\r\n+    setLastName,\r\n+    email,\r\n+    setEmail,\r\n+    dob,\r\n+    setDob,\r\n+    goal,\r\n+    setGoal,\r\n+    experience,\r\n+    setExperience,\r\n\\ No newline at end of file\n+    priorities,\r\n+    setPriorities,\r\n+    priorityInput,\r\n+    setPriorityInput,\r\n+    skills,\r\n+    setSkills,\r\n+    skillInput,\r\n+    setSkillInput,\r\n+    commonSkills,\r\n+    industries,\r\n+    setIndustries,\r\n+    industryInput,\r\n+    setIndustryInput,\r\n+    experiences,\r\n+    setExperiences,\r\n+    educationList,\r\n+    setEducationList,\r\n+    linkedInProfileUrl,\r\n+    setLinkedInProfileUrl,\r\n+    linkedInName,\r\n+    setLinkedInName,\r\n+    linkedInSummary,\r\n+    setLinkedInSummary,\r\n     // Methods\r\n-    addPriority, handlePriorityKey, removePriority,\r\n-    addSkill, handleSkillKey, removeSkill, toggleCommonSkill,\r\n-    addIndustry, removeIndustry, handleIndustryKey,\r\n-    addExperience, updateExperience, removeExperience,\r\n-    addEducation, updateEducation, removeEducation,\r\n+    addPriority,\r\n+    handlePriorityKey,\r\n+    removePriority,\r\n+    addSkill,\r\n+    handleSkillKey,\r\n+    removeSkill,\r\n+    toggleCommonSkill,\r\n+    addIndustry,\r\n+    removeIndustry,\r\n+    handleIndustryKey,\r\n+    addExperience,\r\n+    updateExperience,\r\n+    removeExperience,\r\n+    addEducation,\r\n+    updateEducation,\r\n+    removeEducation,\r\n     handleRegister,\r\n-      MAX_PRIORITIES,\r\n-  MAX_SKILLS,\r\n-  MAX_INDUSTRIES\r\n+    MAX_PRIORITIES,\r\n+    MAX_SKILLS,\r\n+    MAX_INDUSTRIES,\r\n   };\r\n-}\n+}\r\n"
                },
                {
                    "date": 1755444284489,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -290,5 +290,5 @@\n     MAX_PRIORITIES,\r\n     MAX_SKILLS,\r\n     MAX_INDUSTRIES,\r\n   };\r\n-}\n\\ No newline at end of file\n+}\r\n"
                },
                {
                    "date": 1755444290793,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -233,62 +233,30 @@\n   };\r\n \r\n   return {\r\n     // States\r\n-    firstName,\r\n-    setFirstName,\r\n-    lastName,\r\n-    setLastName,\r\n-    email,\r\n-    setEmail,\r\n-    dob,\r\n-    setDob,\r\n-    goal,\r\n-    setGoal,\r\n-    experience,\r\n-    setExperience,\r\n-    priorities,\r\n-    setPriorities,\r\n-    priorityInput,\r\n-    setPriorityInput,\r\n-    skills,\r\n-    setSkills,\r\n-    skillInput,\r\n-    setSkillInput,\r\n-    commonSkills,\r\n-    industries,\r\n-    setIndustries,\r\n-    industryInput,\r\n-    setIndustryInput,\r\n-    experiences,\r\n-    setExperiences,\r\n-    educationList,\r\n-    setEducationList,\r\n-    linkedInProfileUrl,\r\n-    setLinkedInProfileUrl,\r\n-    linkedInName,\r\n-    setLinkedInName,\r\n-    linkedInSummary,\r\n-    setLinkedInSummary,\r\n+    firstName, setFirstName,\r\n+    lastName, setLastName,\r\n+    email, setEmail,\r\n+    dob, setDob,\r\n+    goal, setGoal,\r\n+    experience, setExperience,\r\n+    priorities, setPriorities, priorityInput, setPriorityInput,\r\n+    skills, setSkills, skillInput, setSkillInput, commonSkills,\r\n+    industries, setIndustries, industryInput, setIndustryInput,\r\n+    experiences, setExperiences,\r\n+    educationList, setEducationList,\r\n+    linkedInProfileUrl, setLinkedInProfileUrl,\r\n+    linkedInName, setLinkedInName,\r\n+    linkedInSummary, setLinkedInSummary,\r\n     // Methods\r\n-    addPriority,\r\n-    handlePriorityKey,\r\n-    removePriority,\r\n-    addSkill,\r\n-    handleSkillKey,\r\n-    removeSkill,\r\n-    toggleCommonSkill,\r\n-    addIndustry,\r\n-    removeIndustry,\r\n-    handleIndustryKey,\r\n-    addExperience,\r\n-    updateExperience,\r\n-    removeExperience,\r\n-    addEducation,\r\n-    updateEducation,\r\n-    removeEducation,\r\n+    addPriority, handlePriorityKey, removePriority,\r\n+    addSkill, handleSkillKey, removeSkill, toggleCommonSkill,\r\n+    addIndustry, removeIndustry, handleIndustryKey,\r\n+    addExperience, updateExperience, removeExperience,\r\n+    addEducation, updateEducation, removeEducation,\r\n     handleRegister,\r\n-    MAX_PRIORITIES,\r\n-    MAX_SKILLS,\r\n-    MAX_INDUSTRIES,\r\n+      MAX_PRIORITIES,\r\n+  MAX_SKILLS,\r\n+  MAX_INDUSTRIES\r\n   };\r\n-}\r\n+}\n\\ No newline at end of file\n"
                },
                {
                    "date": 1755444296096,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -255,8 +255,8 @@\n     addExperience, updateExperience, removeExperience,\r\n     addEducation, updateEducation, removeEducation,\r\n     handleRegister,\r\n       MAX_PRIORITIES,\r\n-  MAX_SKILLS,\r\n-  MAX_INDUSTRIES\r\n+      MAX_SKILLS,\r\n+   MAX_INDUSTRIES\r\n   };\r\n }\n\\ No newline at end of file\n"
                }
            ],
            "date": 1755443134254,
            "name": "Commit-0",
            "content": "import { useState } from \"react\";\r\nimport { registerUser } from \"../../../api/register/registerApi\";\r\n\r\nexport default function useRegisterForm() {\r\n  const [firstName, setFirstName] = useState(\"\");\r\n  const [lastName, setLastName] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [dob, setDob] = useState(\"\");\r\n\r\n  const [goal, setGoal] = useState(\"\");\r\n  const [experience, setExperience] = useState(\"\");\r\n\r\n  const [priorities, setPriorities] = useState([]);\r\n  const [priorityInput, setPriorityInput] = useState(\"\");\r\n\r\n  const [skills, setSkills] = useState([]);\r\n  const [skillInput, setSkillInput] = useState(\"\");\r\n\r\n  const [industries, setIndustries] = useState([]);\r\n  const [industryInput, setIndustryInput] = useState([]);\r\n\r\n  const [experiences, setExperiences] = useState([]);\r\n  const [educationList, setEducationList] = useState([]);\r\n\r\n  const [linkedInProfileUrl, setLinkedInProfileUrl] = useState(\"\");\r\n  const [linkedInName, setLinkedInName] = useState(\"\");\r\n  const [linkedInSummary, setLinkedInSummary] = useState(\"\");\r\n\r\n  // ğŸ“Œ Add here your add/remove handlers (priorities, skills, industries, etc.)\r\n  // (I can move all functions you wrote directly here boss without changing logic)\r\n\r\n  const handleRegister = async () => {\r\n    try {\r\n      const payload = {\r\n        firstName,\r\n        lastName,\r\n        email,\r\n        dob,\r\n        goal,\r\n        priorities,\r\n        experience,\r\n        skills,\r\n        industries,\r\n        linkedInProfileUrl,\r\n        linkedInName,\r\n        linkedInSummary,\r\n        linkedInExperience: experiences,\r\n        linkedInEducation: educationList,\r\n        linkedInSkills: skills,\r\n        linkedInConnectionsCount: 500,\r\n      };\r\n\r\n      console.log(\"Payload being sent:\", JSON.stringify(payload, null, 2));\r\n      const data = await registerUser(payload);\r\n      console.log(\"Registration Success:\", data);\r\n      alert(\"User registered successfully!\");\r\n    } catch (err) {\r\n      console.error(\"Registration Error:\", err);\r\n      alert(err.message || \"Registration failed\");\r\n    }\r\n  };\r\n\r\n  return {\r\n    // states\r\n    firstName, setFirstName,\r\n    lastName, setLastName,\r\n    email, setEmail,\r\n    dob, setDob,\r\n    goal, setGoal,\r\n    experience, setExperience,\r\n    priorities, setPriorities, priorityInput, setPriorityInput,\r\n    skills, setSkills, skillInput, setSkillInput,\r\n    industries, setIndustries, industryInput, setIndustryInput,\r\n    experiences, setExperiences,\r\n    educationList, setEducationList,\r\n    linkedInProfileUrl, setLinkedInProfileUrl,\r\n    linkedInName, setLinkedInName,\r\n    linkedInSummary, setLinkedInSummary,\r\n    // methods\r\n    handleRegister,\r\n  };\r\n}"
        }
    ]
}