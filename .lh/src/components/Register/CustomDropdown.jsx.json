{
    "sourceFile": "src/components/Register/CustomDropdown.jsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 38,
            "patches": [
                {
                    "date": 1755008671712,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1755011506858,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,17 +1,17 @@\n-import { useState, useRef, useEffect } from 'react';\r\n-import { CaretDown } from 'phosphor-react';\r\n+// import { useState, useRef, useEffect } from 'react';\r\n+// import { CaretDown } from 'phosphor-react';\r\n \r\n-export const CustomDropdown = ({ label, options }) => {\r\n-  const [isOpen, setIsOpen] = useState(false);\r\n-  const [selected, setSelected] = useState(\"\");\r\n-  const dropdownRef = useRef(null);\r\n+// export const CustomDropdown = ({ label, options }) => {\r\n+//   const [isOpen, setIsOpen] = useState(false);\r\n+//   const [selected, setSelected] = useState(\"\");\r\n+//   const dropdownRef = useRef(null);\r\n \r\n-  // ... dropdown logic\r\n+//   // ... dropdown logic\r\n \r\n\\ No newline at end of file\n-  return (\r\n-    <div className=\"form-group select-group\" ref={dropdownRef}>\r\n-      <label>{label}</label>\r\n-      {/* ... dropdown JSX */}\r\n-    </div>\r\n-  );\r\n-};\n+//   return (\r\n+//     <div className=\"form-group select-group\" ref={dropdownRef}>\r\n+//       <label>{label}</label>\r\n+//       {/* ... dropdown JSX */}\r\n+//     </div>\r\n+//   );\r\n+// };\n\\ No newline at end of file\n"
                },
                {
                    "date": 1755443665552,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,17 +1,65 @@\n-// import { useState, useRef, useEffect } from 'react';\r\n-// import { CaretDown } from 'phosphor-react';\r\n+import React, { useState, useRef, useEffect } from \"react\";\r\n+import { CaretDown } from \"phosphor-react\";\r\n+import \"./Register.css\";\r\n \r\n-// export const CustomDropdown = ({ label, options }) => {\r\n-//   const [isOpen, setIsOpen] = useState(false);\r\n-//   const [selected, setSelected] = useState(\"\");\r\n-//   const dropdownRef = useRef(null);\r\n+const CustomDropdown = ({ label, options, value, onChange }) => {\r\n+  const [isOpen, setIsOpen] = useState(false);\r\n+  const [openUp, setOpenUp] = useState(false);\r\n+  const dropdownRef = useRef(null);\r\n \r\n-//   // ... dropdown logic\r\n+  const toggleDropdown = () => {\r\n\\ No newline at end of file\n+    if (!isOpen && dropdownRef.current) {\r\n+      const rect = dropdownRef.current.getBoundingClientRect();\r\n+      const spaceBelow = window.innerHeight - rect.bottom;\r\n+      const spaceAbove = rect.top;\r\n+      setOpenUp(spaceBelow < 150 && spaceAbove > spaceBelow);\r\n+    }\r\n+    setIsOpen(!isOpen);\r\n+  };\r\n \r\n-//   return (\r\n-//     <div className=\"form-group select-group\" ref={dropdownRef}>\r\n-//       <label>{label}</label>\r\n-//       {/* ... dropdown JSX */}\r\n-//     </div>\r\n-//   );\r\n-// };\n+  const handleSelect = (option) => {\r\n+    onChange(option);\r\n+    setIsOpen(false);\r\n+  };\r\n+\r\n+  useEffect(() => {\r\n+    const handleClickOutside = (e) => {\r\n+      if (dropdownRef.current && !dropdownRef.current.contains(e.target)) {\r\n+        setIsOpen(false);\r\n+      }\r\n+    };\r\n+    document.addEventListener(\"mousedown\", handleClickOutside);\r\n+    return () => document.removeEventListener(\"mousedown\", handleClickOutside);\r\n+  }, []);\r\n+\r\n+  return (\r\n+    <div className=\"form-group select-group\" ref={dropdownRef}>\r\n+      <label>{label}</label>\r\n+      <div\r\n+        className={custom-select ${isOpen ? \"open\" : \"\"}}\r\n+        onClick={toggleDropdown}\r\n+      >\r\n+        <span className=\"selected-value\">\r\n+          {value || Select ${label.toLowerCase()}}\r\n+        </span>\r\n+        <CaretDown size={14} weight=\"bold\" className=\"select-icon\" />\r\n+      </div>\r\n+\r\n+      {isOpen && (\r\n+        <ul className={dropdown-list ${openUp ? \"open-up\" : \"open-down\"}}>\r\n+          {options.map((opt, idx) => (\r\n+            <li\r\n+              key={idx}\r\n+              onClick={() => handleSelect(opt)}\r\n+              className=\"dropdown-option\"\r\n+            >\r\n+              {opt}\r\n+            </li>\r\n+          ))}\r\n+        </ul>\r\n+      )}\r\n+    </div>\r\n+  );\r\n+};\r\n+\r\n+export default CustomDropdown;\n\\ No newline at end of file\n"
                },
                {
                    "date": 1755443679845,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -45,9 +45,9 @@\n         <CaretDown size={14} weight=\"bold\" className=\"select-icon\" />\r\n       </div>\r\n \r\n       {isOpen && (\r\n-        <ul className={dropdown-list ${openUp ? \"open-up\" : \"open-down\"}}>\r\n+        <ul className={`dropdown-list ${openUp ? \"open-up\" : \"open-down\"}}>\r\n           {options.map((opt, idx) => (\r\n             <li\r\n               key={idx}\r\n               onClick={() => handleSelect(opt)}\r\n"
                },
                {
                    "date": 1755443688916,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,65 @@\n+import React, { useState, useRef, useEffect } from \"react\";\r\n+import { CaretDown } from \"phosphor-react\";\r\n+import \"./Register.css\";\r\n+\r\n+const CustomDropdown = ({ label, options, value, onChange }) => {\r\n+  const [isOpen, setIsOpen] = useState(false);\r\n+  const [openUp, setOpenUp] = useState(false);\r\n+  const dropdownRef = useRef(null);\r\n+\r\n+  const toggleDropdown = () => {\r\n+    if (!isOpen && dropdownRef.current) {\r\n+      const rect = dropdownRef.current.getBoundingClientRect();\r\n+      const spaceBelow = window.innerHeight - rect.bottom;\r\n+      const spaceAbove = rect.top;\r\n+      setOpenUp(spaceBelow < 150 && spaceAbove > spaceBelow);\r\n+    }\r\n+    setIsOpen(!isOpen);\r\n+  };\r\n+\r\n+  const handleSelect = (option) => {\r\n+    onChange(option);\r\n+    setIsOpen(false);\r\n+  };\r\n+\r\n+  useEffect(() => {\r\n+    const handleClickOutside = (e) => {\r\n+      if (dropdownRef.current && !dropdownRef.current.contains(e.target)) {\r\n+        setIsOpen(false);\r\n+      }\r\n+    };\r\n+    document.addEventListener(\"mousedown\", handleClickOutside);\r\n+    return () => document.removeEventListener(\"mousedown\", handleClickOutside);\r\n+  }, []);\r\n+\r\n+  return (\r\n+    <div className=\"form-group select-group\" ref={dropdownRef}>\r\n+      <label>{label}</label>\r\n+      <div\r\n+        className={custom-select ${isOpen ? \"open\" : \"\"}}\r\n+        onClick={toggleDropdown}\r\n+      >\r\n+        <span className=\"selected-value\">\r\n+          {value || `Select ${label.toLowerCase()}}\r\n+        </span>\r\n+        <CaretDown size={14} weight=\"bold\" className=\"select-icon\" />\r\n+      </div>\r\n+\r\n+      {isOpen && (\r\n+        <ul className={`dropdown-list ${openUp ? \"open-up\" : \"open-down\"}`}>\r\n+          {options.map((opt, idx) => (\r\n+            <li\r\n+              key={idx}\r\n+              onClick={() => handleSelect(opt)}\r\n+              className=\"dropdown-option\"\r\n+            >\r\n+              {opt}\r\n+            </li>\r\n+          ))}\r\n+        </ul>\r\n+      )}\r\n+    </div>\r\n+  );\r\n+};\r\n+\r\n+export default CustomDropdown;\n\\ No newline at end of file\n"
                },
                {
                    "date": 1755443696599,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,65 @@\n+import React, { useState, useRef, useEffect } from \"react\";\r\n+import { CaretDown } from \"phosphor-react\";\r\n+import \"./Register.css\";\r\n+\r\n+const CustomDropdown = ({ label, options, value, onChange }) => {\r\n+  const [isOpen, setIsOpen] = useState(false);\r\n+  const [openUp, setOpenUp] = useState(false);\r\n+  const dropdownRef = useRef(null);\r\n+\r\n+  const toggleDropdown = () => {\r\n+    if (!isOpen && dropdownRef.current) {\r\n+      const rect = dropdownRef.current.getBoundingClientRect();\r\n+      const spaceBelow = window.innerHeight - rect.bottom;\r\n+      const spaceAbove = rect.top;\r\n+      setOpenUp(spaceBelow < 150 && spaceAbove > spaceBelow);\r\n+    }\r\n+    setIsOpen(!isOpen);\r\n+  };\r\n+\r\n+  const handleSelect = (option) => {\r\n+    onChange(option);\r\n+    setIsOpen(false);\r\n+  };\r\n+\r\n+  useEffect(() => {\r\n+    const handleClickOutside = (e) => {\r\n+      if (dropdownRef.current && !dropdownRef.current.contains(e.target)) {\r\n+        setIsOpen(false);\r\n+      }\r\n+    };\r\n+    document.addEventListener(\"mousedown\", handleClickOutside);\r\n+    return () => document.removeEventListener(\"mousedown\", handleClickOutside);\r\n+  }, []);\r\n+\r\n+  return (\r\n+    <div className=\"form-group select-group\" ref={dropdownRef}>\r\n+      <label>{label}</label>\r\n+      <div\r\n+        className={`custom-select ${isOpen ? \"open\" : \"\"}}\r\n+        onClick={toggleDropdown}\r\n+      >\r\n+        <span className=\"selected-value\">\r\n+          {value || `Select ${label.toLowerCase()}`}\r\n+        </span>\r\n+        <CaretDown size={14} weight=\"bold\" className=\"select-icon\" />\r\n+      </div>\r\n+\r\n+      {isOpen && (\r\n+        <ul className={`dropdown-list ${openUp ? \"open-up\" : \"open-down\"}`}>\r\n+          {options.map((opt, idx) => (\r\n+            <li\r\n+              key={idx}\r\n+              onClick={() => handleSelect(opt)}\r\n+              className=\"dropdown-option\"\r\n+            >\r\n+              {opt}\r\n+            </li>\r\n+          ))}\r\n+        </ul>\r\n+      )}\r\n+    </div>\r\n+  );\r\n+};\r\n+\r\n+export default CustomDropdown;\n\\ No newline at end of file\n"
                },
                {
                    "date": 1755590852230,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -35,13 +35,13 @@\n   return (\r\n     <div className=\"form-group select-group\" ref={dropdownRef}>\r\n       <label>{label}</label>\r\n       <div\r\n-        className={`custom-select ${isOpen ? \"open\" : \"\"}}\r\n+        className={`custom-select ${isOpen ? \"open\" : \"\"}`}\r\n         onClick={toggleDropdown}\r\n       >\r\n         <span className=\"selected-value\">\r\n-          {value || `Select ${label.toLowerCase()}`}\r\n+          {value || `Select ${label.toLowerCase() }`}\r\n         </span>\r\n         <CaretDown size={14} weight=\"bold\" className=\"select-icon\" />\r\n       </div>\r\n \r\n@@ -61,135 +61,5 @@\n     </div>\r\n   );\r\n };\r\n \r\n-export default CustomDropdown;\n-import React, { useState, useRef, useEffect } from \"react\";\r\n-import { CaretDown } from \"phosphor-react\";\r\n-import \"./Register.css\";\r\n-\r\n-const CustomDropdown = ({ label, options, value, onChange }) => {\r\n-  const [isOpen, setIsOpen] = useState(false);\r\n-  const [openUp, setOpenUp] = useState(false);\r\n-  const dropdownRef = useRef(null);\r\n-\r\n-  const toggleDropdown = () => {\r\n-    if (!isOpen && dropdownRef.current) {\r\n-      const rect = dropdownRef.current.getBoundingClientRect();\r\n-      const spaceBelow = window.innerHeight - rect.bottom;\r\n-      const spaceAbove = rect.top;\r\n-      setOpenUp(spaceBelow < 150 && spaceAbove > spaceBelow);\r\n-    }\r\n-    setIsOpen(!isOpen);\r\n-  };\r\n-\r\n-  const handleSelect = (option) => {\r\n-    onChange(option);\r\n-    setIsOpen(false);\r\n-  };\r\n-\r\n-  useEffect(() => {\r\n-    const handleClickOutside = (e) => {\r\n-      if (dropdownRef.current && !dropdownRef.current.contains(e.target)) {\r\n-        setIsOpen(false);\r\n-      }\r\n-    };\r\n-    document.addEventListener(\"mousedown\", handleClickOutside);\r\n-    return () => document.removeEventListener(\"mousedown\", handleClickOutside);\r\n-  }, []);\r\n-\r\n-  return (\r\n-    <div className=\"form-group select-group\" ref={dropdownRef}>\r\n-      <label>{label}</label>\r\n-      <div\r\n-        className={custom-select ${isOpen ? \"open\" : \"\"}}\r\n-        onClick={toggleDropdown}\r\n-      >\r\n-        <span className=\"selected-value\">\r\n-          {value || `Select ${label.toLowerCase()}}\r\n-        </span>\r\n-        <CaretDown size={14} weight=\"bold\" className=\"select-icon\" />\r\n-      </div>\r\n-\r\n-      {isOpen && (\r\n-        <ul className={`dropdown-list ${openUp ? \"open-up\" : \"open-down\"}`}>\r\n-          {options.map((opt, idx) => (\r\n-            <li\r\n-              key={idx}\r\n-              onClick={() => handleSelect(opt)}\r\n-              className=\"dropdown-option\"\r\n-            >\r\n-              {opt}\r\n-            </li>\r\n-          ))}\r\n-        </ul>\r\n-      )}\r\n-    </div>\r\n-  );\r\n-};\r\n-\r\n-export default CustomDropdown;\n-import React, { useState, useRef, useEffect } from \"react\";\r\n-import { CaretDown } from \"phosphor-react\";\r\n-import \"./Register.css\";\r\n-\r\n-const CustomDropdown = ({ label, options, value, onChange }) => {\r\n-  const [isOpen, setIsOpen] = useState(false);\r\n-  const [openUp, setOpenUp] = useState(false);\r\n-  const dropdownRef = useRef(null);\r\n-\r\n-  const toggleDropdown = () => {\r\n-    if (!isOpen && dropdownRef.current) {\r\n-      const rect = dropdownRef.current.getBoundingClientRect();\r\n-      const spaceBelow = window.innerHeight - rect.bottom;\r\n-      const spaceAbove = rect.top;\r\n-      setOpenUp(spaceBelow < 150 && spaceAbove > spaceBelow);\r\n-    }\r\n-    setIsOpen(!isOpen);\r\n-  };\r\n-\r\n-  const handleSelect = (option) => {\r\n-    onChange(option);\r\n-    setIsOpen(false);\r\n-  };\r\n-\r\n-  useEffect(() => {\r\n-    const handleClickOutside = (e) => {\r\n-      if (dropdownRef.current && !dropdownRef.current.contains(e.target)) {\r\n-        setIsOpen(false);\r\n-      }\r\n-    };\r\n-    document.addEventListener(\"mousedown\", handleClickOutside);\r\n-    return () => document.removeEventListener(\"mousedown\", handleClickOutside);\r\n-  }, []);\r\n-\r\n-  return (\r\n-    <div className=\"form-group select-group\" ref={dropdownRef}>\r\n-      <label>{label}</label>\r\n-      <div\r\n-        className={custom-select ${isOpen ? \"open\" : \"\"}}\r\n-        onClick={toggleDropdown}\r\n-      >\r\n-        <span className=\"selected-value\">\r\n-          {value || Select ${label.toLowerCase()}}\r\n-        </span>\r\n-        <CaretDown size={14} weight=\"bold\" className=\"select-icon\" />\r\n-      </div>\r\n-\r\n-      {isOpen && (\r\n-        <ul className={`dropdown-list ${openUp ? \"open-up\" : \"open-down\"}}>\r\n-          {options.map((opt, idx) => (\r\n-            <li\r\n-              key={idx}\r\n-              onClick={() => handleSelect(opt)}\r\n-              className=\"dropdown-option\"\r\n-            >\r\n-              {opt}\r\n-            </li>\r\n-          ))}\r\n-        </ul>\r\n-      )}\r\n-    </div>\r\n-  );\r\n-};\r\n-\r\n export default CustomDropdown;\n\\ No newline at end of file\n"
                },
                {
                    "date": 1755590857434,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -39,9 +39,9 @@\n         className={`custom-select ${isOpen ? \"open\" : \"\"}`}\r\n         onClick={toggleDropdown}\r\n       >\r\n         <span className=\"selected-value\">\r\n-          {value || `Select ${label.toLowerCase() }`}\r\n+          {value || `Select ${label.toLowerCase() : \"opti\"}`}\r\n         </span>\r\n         <CaretDown size={14} weight=\"bold\" className=\"select-icon\" />\r\n       </div>\r\n \r\n"
                },
                {
                    "date": 1755590874129,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -39,9 +39,9 @@\n         className={`custom-select ${isOpen ? \"open\" : \"\"}`}\r\n         onClick={toggleDropdown}\r\n       >\r\n         <span className=\"selected-value\">\r\n-          {value || `Select ${label.toLowerCase() : \"opti\"}`}\r\n+          {value || `Select ${ label.toLowerCase() : \"option\"}`}\r\n         </span>\r\n         <CaretDown size={14} weight=\"bold\" className=\"select-icon\" />\r\n       </div>\r\n \r\n"
                },
                {
                    "date": 1755590880152,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -39,9 +39,9 @@\n         className={`custom-select ${isOpen ? \"open\" : \"\"}`}\r\n         onClick={toggleDropdown}\r\n       >\r\n         <span className=\"selected-value\">\r\n-          {value || `Select ${ label.toLowerCase() : \"option\"}`}\r\n+          {value || `Select ${label ? label.toLowerCase() : \"option\"}`}\r\n         </span>\r\n         <CaretDown size={14} weight=\"bold\" className=\"select-icon\" />\r\n       </div>\r\n \r\n"
                },
                {
                    "date": 1755591514398,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -17,9 +17,9 @@\n     setIsOpen(!isOpen);\r\n   };\r\n \r\n   const handleSelect = (option) => {\r\n-    onChange(option);\r\n+    onChange(option.);\r\n     setIsOpen(false);\r\n   };\r\n \r\n   useEffect(() => {\r\n"
                },
                {
                    "date": 1755591682750,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -17,9 +17,9 @@\n     setIsOpen(!isOpen);\r\n   };\r\n \r\n   const handleSelect = (option) => {\r\n-    onChange(option.);\r\n+    onChange(option.value);\r\n     setIsOpen(false);\r\n   };\r\n \r\n   useEffect(() => {\r\n@@ -48,9 +48,9 @@\n       {isOpen && (\r\n         <ul className={`dropdown-list ${openUp ? \"open-up\" : \"open-down\"}`}>\r\n           {options.map((opt, idx) => (\r\n             <li\r\n-              key={idx}\r\n+              key={ idx}\r\n               onClick={() => handleSelect(opt)}\r\n               className=\"dropdown-option\"\r\n             >\r\n               {opt}\r\n"
                },
                {
                    "date": 1755591687864,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -48,9 +48,9 @@\n       {isOpen && (\r\n         <ul className={`dropdown-list ${openUp ? \"open-up\" : \"open-down\"}`}>\r\n           {options.map((opt, idx) => (\r\n             <li\r\n-              key={ idx}\r\n+              key={opt. idx}\r\n               onClick={() => handleSelect(opt)}\r\n               className=\"dropdown-option\"\r\n             >\r\n               {opt}\r\n"
                },
                {
                    "date": 1755591702685,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -48,13 +48,13 @@\n       {isOpen && (\r\n         <ul className={`dropdown-list ${openUp ? \"open-up\" : \"open-down\"}`}>\r\n           {options.map((opt, idx) => (\r\n             <li\r\n-              key={opt. idx}\r\n+              key={opt.id || idx}\r\n               onClick={() => handleSelect(opt)}\r\n               className=\"dropdown-option\"\r\n             >\r\n-              {opt}\r\n+              {opt.}\r\n             </li>\r\n           ))}\r\n         </ul>\r\n       )}\r\n"
                },
                {
                    "date": 1755594708585,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,9 +1,9 @@\n import React, { useState, useRef, useEffect } from \"react\";\r\n import { CaretDown } from \"phosphor-react\";\r\n import \"./Register.css\";\r\n \r\n-const CustomDropdown = ({ label, options, value, onChange }) => {\r\n+const CustomDropdown = ({ label, options = [], value, onChange }) => {\r\n   const [isOpen, setIsOpen] = useState(false);\r\n   const [openUp, setOpenUp] = useState(false);\r\n   const dropdownRef = useRef(null);\r\n \r\n@@ -17,9 +17,9 @@\n     setIsOpen(!isOpen);\r\n   };\r\n \r\n   const handleSelect = (option) => {\r\n-    onChange(option.value);\r\n+    onChange(option.id); // save option id\r\n     setIsOpen(false);\r\n   };\r\n \r\n   useEffect(() => {\r\n@@ -35,26 +35,26 @@\n   return (\r\n     <div className=\"form-group select-group\" ref={dropdownRef}>\r\n       <label>{label}</label>\r\n       <div\r\n-        className={`custom-select ${isOpen ? \"open\" : \"\"}`}\r\n+        className={custom-select ${isOpen ? \"open\" : \"\"}}\r\n         onClick={toggleDropdown}\r\n       >\r\n         <span className=\"selected-value\">\r\n-          {value || `Select ${label ? label.toLowerCase() : \"option\"}`}\r\n+          {value || Select ${label ? label.toLowerCase() : \"option\"}}\r\n         </span>\r\n         <CaretDown size={14} weight=\"bold\" className=\"select-icon\" />\r\n       </div>\r\n \r\n       {isOpen && (\r\n-        <ul className={`dropdown-list ${openUp ? \"open-up\" : \"open-down\"}`}>\r\n+        <ul className={dropdown-list ${openUp ? \"open-up\" : \"open-down\"}}>\r\n           {options.map((opt, idx) => (\r\n             <li\r\n               key={opt.id || idx}\r\n               onClick={() => handleSelect(opt)}\r\n               className=\"dropdown-option\"\r\n             >\r\n-              {opt.}\r\n+              {opt.value}\r\n             </li>\r\n           ))}\r\n         </ul>\r\n       )}\r\n"
                },
                {
                    "date": 1755594749185,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -35,9 +35,9 @@\n   return (\r\n     <div className=\"form-group select-group\" ref={dropdownRef}>\r\n       <label>{label}</label>\r\n       <div\r\n-        className={custom-select ${isOpen ? \"open\" : \"\"}}\r\n+        className=`{custom-select ${isOpen ? \"open\" : \"\"}}\r\n         onClick={toggleDropdown}\r\n       >\r\n         <span className=\"selected-value\">\r\n           {value || Select ${label ? label.toLowerCase() : \"option\"}}\r\n"
                },
                {
                    "date": 1755594755889,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -35,9 +35,9 @@\n   return (\r\n     <div className=\"form-group select-group\" ref={dropdownRef}>\r\n       <label>{label}</label>\r\n       <div\r\n-        className=`{custom-select ${isOpen ? \"open\" : \"\"}}\r\n+        className=`{custom-select ${isOpen ? \"open\" : \"\"}``}\r\n         onClick={toggleDropdown}\r\n       >\r\n         <span className=\"selected-value\">\r\n           {value || Select ${label ? label.toLowerCase() : \"option\"}}\r\n"
                },
                {
                    "date": 1755594762781,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -35,9 +35,9 @@\n   return (\r\n     <div className=\"form-group select-group\" ref={dropdownRef}>\r\n       <label>{label}</label>\r\n       <div\r\n-        className=`{custom-select ${isOpen ? \"open\" : \"\"}``}\r\n+        className={custom-select ${isOpen ? \"open\" : \"\"}}\r\n         onClick={toggleDropdown}\r\n       >\r\n         <span className=\"selected-value\">\r\n           {value || Select ${label ? label.toLowerCase() : \"option\"}}\r\n"
                },
                {
                    "date": 1755594770344,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -35,9 +35,9 @@\n   return (\r\n     <div className=\"form-group select-group\" ref={dropdownRef}>\r\n       <label>{label}</label>\r\n       <div\r\n-        className={custom-select ${isOpen ? \"open\" : \"\"}}\r\n+        className={`custom-select ${isOpen ? \"open\" : \"\"}}\r\n         onClick={toggleDropdown}\r\n       >\r\n         <span className=\"selected-value\">\r\n           {value || Select ${label ? label.toLowerCase() : \"option\"}}\r\n"
                },
                {
                    "date": 1755594777522,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -35,13 +35,13 @@\n   return (\r\n     <div className=\"form-group select-group\" ref={dropdownRef}>\r\n       <label>{label}</label>\r\n       <div\r\n-        className={`custom-select ${isOpen ? \"open\" : \"\"}}\r\n+        className={`custom-select ${isOpen ? \"open\" : \"\"}`}\r\n         onClick={toggleDropdown}\r\n       >\r\n         <span className=\"selected-value\">\r\n-          {value || Select ${label ? label.toLowerCase() : \"option\"}}\r\n+          {value || `Select ${label ? label.toLowerCase() : \"option\"}}\r\n         </span>\r\n         <CaretDown size={14} weight=\"bold\" className=\"select-icon\" />\r\n       </div>\r\n \r\n"
                },
                {
                    "date": 1755594789735,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -39,15 +39,15 @@\n         className={`custom-select ${isOpen ? \"open\" : \"\"}`}\r\n         onClick={toggleDropdown}\r\n       >\r\n         <span className=\"selected-value\">\r\n-          {value || `Select ${label ? label.toLowerCase() : \"option\"}}\r\n+          {value || `Select ${label ? label.toLowerCase() : \"option\"}`}\r\n         </span>\r\n         <CaretDown size={14} weight=\"bold\" className=\"select-icon\" />\r\n       </div>\r\n \r\n       {isOpen && (\r\n-        <ul className={dropdown-list ${openUp ? \"open-up\" : \"open-down\"}}>\r\n+        <ul className={`dropdown-list ${openUp ? \"open-up\" : \"open-down\"}}>\r\n           {options.map((opt, idx) => (\r\n             <li\r\n               key={opt.id || idx}\r\n               onClick={() => handleSelect(opt)}\r\n"
                },
                {
                    "date": 1755604403510,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -17,9 +17,9 @@\n     setIsOpen(!isOpen);\r\n   };\r\n \r\n   const handleSelect = (option) => {\r\n-    onChange(option.id); // save option id\r\n+    onChange(option.v); // save option id\r\n     setIsOpen(false);\r\n   };\r\n \r\n   useEffect(() => {\r\n@@ -45,9 +45,9 @@\n         <CaretDown size={14} weight=\"bold\" className=\"select-icon\" />\r\n       </div>\r\n \r\n       {isOpen && (\r\n-        <ul className={`dropdown-list ${openUp ? \"open-up\" : \"open-down\"}}>\r\n+        <ul className={`dropdown-list ${openUp ? \"open-up\" : \"open-down\"}`}>\r\n           {options.map((opt, idx) => (\r\n             <li\r\n               key={opt.id || idx}\r\n               onClick={() => handleSelect(opt)}\r\n"
                },
                {
                    "date": 1755604687164,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -17,9 +17,9 @@\n     setIsOpen(!isOpen);\r\n   };\r\n \r\n   const handleSelect = (option) => {\r\n-    onChange(option.v); // save option id\r\n+    onChange(option.valu); // save option id\r\n     setIsOpen(false);\r\n   };\r\n \r\n   useEffect(() => {\r\n"
                },
                {
                    "date": 1755604701542,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -17,9 +17,9 @@\n     setIsOpen(!isOpen);\r\n   };\r\n \r\n   const handleSelect = (option) => {\r\n-    onChange(option.valu); // save option id\r\n+    onChange(option.i); // save option id\r\n     setIsOpen(false);\r\n   };\r\n \r\n   useEffect(() => {\r\n"
                },
                {
                    "date": 1755604707921,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -17,9 +17,9 @@\n     setIsOpen(!isOpen);\r\n   };\r\n \r\n   const handleSelect = (option) => {\r\n-    onChange(option.i); // save option id\r\n+    onChange(option.value); \r\n     setIsOpen(false);\r\n   };\r\n \r\n   useEffect(() => {\r\n"
                },
                {
                    "date": 1755605994342,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -17,9 +17,9 @@\n     setIsOpen(!isOpen);\r\n   };\r\n \r\n   const handleSelect = (option) => {\r\n-    onChange(option.value); \r\n+    onChange(option); \r\n     setIsOpen(false);\r\n   };\r\n \r\n   useEffect(() => {\r\n"
                },
                {
                    "date": 1755606021488,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -39,9 +39,9 @@\n         className={`custom-select ${isOpen ? \"open\" : \"\"}`}\r\n         onClick={toggleDropdown}\r\n       >\r\n         <span className=\"selected-value\">\r\n-          {value || `Select ${label ? label.toLowerCase() : \"option\"}`}\r\n+          {value? || `Select ${label ? label.toLowerCase() : \"option\"}`}\r\n         </span>\r\n         <CaretDown size={14} weight=\"bold\" className=\"select-icon\" />\r\n       </div>\r\n \r\n"
                },
                {
                    "date": 1755606050616,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -39,9 +39,9 @@\n         className={`custom-select ${isOpen ? \"open\" : \"\"}`}\r\n         onClick={toggleDropdown}\r\n       >\r\n         <span className=\"selected-value\">\r\n-          {value? || `Select ${label ? label.toLowerCase() : \"option\"}`}\r\n+          {value?.name || `Select ${label ? label.toLowerCase() : \"option\"}`}\r\n         </span>\r\n         <CaretDown size={14} weight=\"bold\" className=\"select-icon\" />\r\n       </div>\r\n \r\n@@ -52,9 +52,9 @@\n               key={opt.id || idx}\r\n               onClick={() => handleSelect(opt)}\r\n               className=\"dropdown-option\"\r\n             >\r\n-              {opt.value}\r\n+              {opt.nvalue}\r\n             </li>\r\n           ))}\r\n         </ul>\r\n       )}\r\n"
                },
                {
                    "date": 1755606055731,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -52,9 +52,9 @@\n               key={opt.id || idx}\r\n               onClick={() => handleSelect(opt)}\r\n               className=\"dropdown-option\"\r\n             >\r\n-              {opt.nvalue}\r\n+              {opt.namevalu}\r\n             </li>\r\n           ))}\r\n         </ul>\r\n       )}\r\n"
                },
                {
                    "date": 1755606971492,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -52,9 +52,9 @@\n               key={opt.id || idx}\r\n               onClick={() => handleSelect(opt)}\r\n               className=\"dropdown-option\"\r\n             >\r\n-              {opt.namevalu}\r\n+              {opt.v}\r\n             </li>\r\n           ))}\r\n         </ul>\r\n       )}\r\n"
                },
                {
                    "date": 1755622896682,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -52,9 +52,9 @@\n               key={opt.id || idx}\r\n               onClick={() => handleSelect(opt)}\r\n               className=\"dropdown-option\"\r\n             >\r\n-              {opt.v}\r\n+              {opt.n}\r\n             </li>\r\n           ))}\r\n         </ul>\r\n       )}\r\n"
                },
                {
                    "date": 1755622905415,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -52,9 +52,9 @@\n               key={opt.id || idx}\r\n               onClick={() => handleSelect(opt)}\r\n               className=\"dropdown-option\"\r\n             >\r\n-              {opt.n}\r\n+              {opt.nam}\r\n             </li>\r\n           ))}\r\n         </ul>\r\n       )}\r\n"
                },
                {
                    "date": 1755622921515,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -39,9 +39,9 @@\n         className={`custom-select ${isOpen ? \"open\" : \"\"}`}\r\n         onClick={toggleDropdown}\r\n       >\r\n         <span className=\"selected-value\">\r\n-          {value?.name || `Select ${label ? label.toLowerCase() : \"option\"}`}\r\n+          {value?.v || `Select ${label ? label.toLowerCase() : \"option\"}`}\r\n         </span>\r\n         <CaretDown size={14} weight=\"bold\" className=\"select-icon\" />\r\n       </div>\r\n \r\n@@ -52,9 +52,9 @@\n               key={opt.id || idx}\r\n               onClick={() => handleSelect(opt)}\r\n               className=\"dropdown-option\"\r\n             >\r\n-              {opt.nam}\r\n+              {opt.value}\r\n             </li>\r\n           ))}\r\n         </ul>\r\n       )}\r\n"
                },
                {
                    "date": 1755622942103,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -39,9 +39,9 @@\n         className={`custom-select ${isOpen ? \"open\" : \"\"}`}\r\n         onClick={toggleDropdown}\r\n       >\r\n         <span className=\"selected-value\">\r\n-          {value?.v || `Select ${label ? label.toLowerCase() : \"option\"}`}\r\n+          {value?.n || `Select ${label ? label.toLowerCase() : \"option\"}`}\r\n         </span>\r\n         <CaretDown size={14} weight=\"bold\" className=\"select-icon\" />\r\n       </div>\r\n \r\n"
                },
                {
                    "date": 1755623355359,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -39,9 +39,9 @@\n         className={`custom-select ${isOpen ? \"open\" : \"\"}`}\r\n         onClick={toggleDropdown}\r\n       >\r\n         <span className=\"selected-value\">\r\n-          {value?.n || `Select ${label ? label.toLowerCase() : \"option\"}`}\r\n+          {value?.name || `Select ${label ? label.toLowerCase() : \"option\"}`}\r\n         </span>\r\n         <CaretDown size={14} weight=\"bold\" className=\"select-icon\" />\r\n       </div>\r\n \r\n@@ -50,9 +50,9 @@\n           {options.map((opt, idx) => (\r\n             <li\r\n               key={opt.id || idx}\r\n               onClick={() => handleSelect(opt)}\r\n-              className=\"dropdown-option\"\r\n+             n className=\"dropdown-option\"\r\n             >\r\n               {opt.value}\r\n             </li>\r\n           ))}\r\n"
                },
                {
                    "date": 1755625724130,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -45,14 +45,14 @@\n         <CaretDown size={14} weight=\"bold\" className=\"select-icon\" />\r\n       </div>\r\n \r\n       {isOpen && (\r\n-        <ul className={`dropdown-list ${openUp ? \"open-up\" : \"open-down\"}`}>\r\n+        <u className={`dropdown-list ${openUp ? \"open-up\" : \"open-down\"}`}>\r\n           {options.map((opt, idx) => (\r\n             <li\r\n               key={opt.id || idx}\r\n               onClick={() => handleSelect(opt)}\r\n-             n className=\"dropdown-option\"\r\n+             name className=\"dropdown-option\"\r\n             >\r\n               {opt.value}\r\n             </li>\r\n           ))}\r\n"
                },
                {
                    "date": 1755625729340,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -45,9 +45,9 @@\n         <CaretDown size={14} weight=\"bold\" className=\"select-icon\" />\r\n       </div>\r\n \r\n       {isOpen && (\r\n-        <u className={`dropdown-list ${openUp ? \"open-up\" : \"open-down\"}`}>\r\n+        <l className={`dropdown-list ${openUp ? \"open-up\" : \"open-down\"}`}>\r\n           {options.map((opt, idx) => (\r\n             <li\r\n               key={opt.id || idx}\r\n               onClick={() => handleSelect(opt)}\r\n"
                },
                {
                    "date": 1755625754798,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -45,16 +45,16 @@\n         <CaretDown size={14} weight=\"bold\" className=\"select-icon\" />\r\n       </div>\r\n \r\n       {isOpen && (\r\n-        <l className={`dropdown-list ${openUp ? \"open-up\" : \"open-down\"}`}>\r\n+        <ul className={`dropdown-list ${openUp ? \"open-up\" : \"open-down\"}`}>\r\n           {options.map((opt, idx) => (\r\n             <li\r\n               key={opt.id || idx}\r\n               onClick={() => handleSelect(opt)}\r\n              name className=\"dropdown-option\"\r\n             >\r\n-              {opt.value}\r\n+              {opt.n}\r\n             </li>\r\n           ))}\r\n         </ul>\r\n       )}\r\n"
                },
                {
                    "date": 1755625761609,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -50,11 +50,11 @@\n           {options.map((opt, idx) => (\r\n             <li\r\n               key={opt.id || idx}\r\n               onClick={() => handleSelect(opt)}\r\n-             name className=\"dropdown-option\"\r\n+              name className=\"dropdown-option\"\r\n             >\r\n-              {opt.n}\r\n+              {opt.name}\r\n             </li>\r\n           ))}\r\n         </ul>\r\n       )}\r\n"
                }
            ],
            "date": 1755008671712,
            "name": "Commit-0",
            "content": "import { useState, useRef, useEffect } from 'react';\r\nimport { CaretDown } from 'phosphor-react';\r\n\r\nexport const CustomDropdown = ({ label, options }) => {\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const [selected, setSelected] = useState(\"\");\r\n  const dropdownRef = useRef(null);\r\n\r\n  // ... dropdown logic\r\n\r\n  return (\r\n    <div className=\"form-group select-group\" ref={dropdownRef}>\r\n      <label>{label}</label>\r\n      {/* ... dropdown JSX */}\r\n    </div>\r\n  );\r\n};"
        }
    ]
}