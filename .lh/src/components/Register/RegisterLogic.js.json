{
    "sourceFile": "src/components/Register/RegisterLogic.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 7,
            "patches": [
                {
                    "date": 1755008609084,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1755008647859,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -15,9 +15,9 @@\n \r\n   // All handler functions\r\n   const addPriority = () => {\r\n     const v = priorityInput.trim();\r\n-    if (!v || priorities.includes(v) return;\r\n+    if (!v | priorities.includes(v) return;\r\n     if (priorities.length >= MAX_PRIORITIES) return;\r\n     setPriorities(p => [...p, v]);\r\n     setPriorityInput(\"\");\r\n   };\r\n"
                },
                {
                    "date": 1755008831820,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,35 @@\n+import { useState } from 'react';\r\n+import { \r\n+  MAX_PRIORITIES, \r\n+  MAX_SKILLS, \r\n+  MAX_INDUSTRIES,\r\n+  commonSkills\r\n+} from './constants';\r\n+\r\n+export const useRegisterLogic = () => {\r\n+  // All state management\r\n+  const [priorities, setPriorities] = useState([]);\r\n+  const [priorityInput, setPriorityInput] = useState(\"\");\r\n+  const [skills, setSkills] = useState([]);\r\n+  // ... other state declarations\r\n+\r\n+  // All handler functions\r\n+  const addPriority = () => {\r\n+    const v = priorityInput.trim();\r\n+    if (!v || priorities.includes(v)) return;\r\n+    if (priorities.length >= MAX_PRIORITIES) return;\r\n+    setPriorities(p => [...p, v]);\r\n+    setPriorityInput(\"\");\r\n+  };\r\n+\r\n+  // ... other handler functions\r\n+\r\n+  return {\r\n+    // State\r\n+    priorities, priorityInput, \r\n+    skills, skillInput,\r\n+    // Handlers\r\n+    addPriority, removePriority, handlePriorityKey,\r\n+    // ... other returned values\r\n+  };\r\n+};\n\\ No newline at end of file\n"
                },
                {
                    "date": 1755009213600,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -26,45 +26,12 @@\n \r\n   return {\r\n     // State\r\n     priorities, priorityInput, \r\n-    skills, skillInput,\r\n+    skills, skillInput,, setPriorityInput,\r\n+    skillInput, setSkillInput, // Ensure these are returned\r\n+    industryInput, setIndustryInput,\r\n     // Handlers\r\n     addPriority, removePriority, handlePriorityKey,\r\n     // ... other returned values\r\n   };\r\n-};\n-import { useState } from 'react';\r\n-import { \r\n-  MAX_PRIORITIES, \r\n-  MAX_SKILLS, \r\n-  MAX_INDUSTRIES,\r\n-  commonSkills\r\n-} from './constants';\r\n-\r\n-export const useRegisterLogic = () => {\r\n-  // All state management\r\n-  const [priorities, setPriorities] = useState([]);\r\n-  const [priorityInput, setPriorityInput] = useState(\"\");\r\n-  const [skills, setSkills] = useState([]);\r\n-  // ... other state declarations\r\n-\r\n-  // All handler functions\r\n-  const addPriority = () => {\r\n-    const v = priorityInput.trim();\r\n-    if (!v | priorities.includes(v) return;\r\n-    if (priorities.length >= MAX_PRIORITIES) return;\r\n-    setPriorities(p => [...p, v]);\r\n-    setPriorityInput(\"\");\r\n-  };\r\n-\r\n-  // ... other handler functions\r\n-\r\n-  return {\r\n-    // State\r\n-    priorities, priorityInput, \r\n-    skills, skillInput,\r\n-    // Handlers\r\n-    addPriority, removePriority, handlePriorityKey,\r\n-    // ... other returned values\r\n-  };\r\n };\n\\ No newline at end of file\n"
                },
                {
                    "date": 1755009238743,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,38 @@\n+import { useState } from 'react';\r\n+import { \r\n+  MAX_PRIORITIES, \r\n+  MAX_SKILLS, \r\n+  MAX_INDUSTRIES,\r\n+  commonSkills\r\n+} from './constants';\r\n+\r\n+export const useRegisterLogic = () => {\r\n+  // All state management\r\n+  const [priorities, setPriorities] = useState([]);\r\n+  const [priorityInput, setPriorityInput] = useState(\"\");\r\n+  const [skills, setSkills] = useState([]);\r\n+  // ... other state declarations\r\n+\r\n+  // All handler functions\r\n+  const addPriority = () => {\r\n+    const v = priorityInput.trim();\r\n+    if (!v || priorities.includes(v)) return;\r\n+    if (priorities.length >= MAX_PRIORITIES) return;\r\n+    setPriorities(p => [...p, v]);\r\n+    setPriorityInput(\"\");\r\n+  };\r\n+\r\n+  // ... other handler functions\r\n+\r\n+  return {\r\n+    // State\r\n+    priorities, priorityInput, \r\n+    skills, skillInput,setPriorityInput,\r\n+    skillInput, setSkillInput, // Ensure these are returned\r\n+    industryInput, setIndustryInput,\r\n+    // Handlers\r\n+    addPriority, removePriority, handlePriorityKey,skills, addSkill, removeSkill,\r\n+    // ... rest of returned values\r\n+    // ... other returned values\r\n+  };\r\n+};\n\\ No newline at end of file\n"
                },
                {
                    "date": 1755009248561,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -30,46 +30,9 @@\n     skills, skillInput,setPriorityInput,\r\n     skillInput, setSkillInput, // Ensure these are returned\r\n     industryInput, setIndustryInput,\r\n     // Handlers\r\n-    addPriority, removePriority, handlePriorityKey,skills, addSkill, removeSkill,\r\n+    addPriority, removePriority, handlePriorityKey,skills, addSkill, removeSkill,priorities,\r\n     // ... rest of returned values\r\n     // ... other returned values\r\n   };\r\n-};\n-import { useState } from 'react';\r\n-import { \r\n-  MAX_PRIORITIES, \r\n-  MAX_SKILLS, \r\n-  MAX_INDUSTRIES,\r\n-  commonSkills\r\n-} from './constants';\r\n-\r\n-export const useRegisterLogic = () => {\r\n-  // All state management\r\n-  const [priorities, setPriorities] = useState([]);\r\n-  const [priorityInput, setPriorityInput] = useState(\"\");\r\n-  const [skills, setSkills] = useState([]);\r\n-  // ... other state declarations\r\n-\r\n-  // All handler functions\r\n-  const addPriority = () => {\r\n-    const v = priorityInput.trim();\r\n-    if (!v || priorities.includes(v)) return;\r\n-    if (priorities.length >= MAX_PRIORITIES) return;\r\n-    setPriorities(p => [...p, v]);\r\n-    setPriorityInput(\"\");\r\n-  };\r\n-\r\n-  // ... other handler functions\r\n-\r\n-  return {\r\n-    // State\r\n-    priorities, priorityInput, \r\n-    skills, skillInput,, setPriorityInput,\r\n-    skillInput, setSkillInput, // Ensure these are returned\r\n-    industryInput, setIndustryInput,\r\n-    // Handlers\r\n-    addPriority, removePriority, handlePriorityKey,\r\n-    // ... other returned values\r\n-  };\r\n };\n\\ No newline at end of file\n"
                },
                {
                    "date": 1755009253887,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -30,9 +30,8 @@\n     skills, skillInput,setPriorityInput,\r\n     skillInput, setSkillInput, // Ensure these are returned\r\n     industryInput, setIndustryInput,\r\n     // Handlers\r\n-    addPriority, removePriority, handlePriorityKey,skills, addSkill, removeSkill,priorities,\r\n-    // ... rest of returned values\r\n+    addPriority, removePriority, handlePriorityKey,skills, addSkill, removeSkill,priorities\r\n     // ... other returned values\r\n   };\r\n };\n\\ No newline at end of file\n"
                },
                {
                    "date": 1755011498042,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,37 +1,37 @@\n-import { useState } from 'react';\r\n-import { \r\n-  MAX_PRIORITIES, \r\n-  MAX_SKILLS, \r\n-  MAX_INDUSTRIES,\r\n-  commonSkills\r\n-} from './constants';\r\n+// import { useState } from 'react';\r\n+// import { \r\n+//   MAX_PRIORITIES, \r\n+//   MAX_SKILLS, \r\n+//   MAX_INDUSTRIES,\r\n+//   commonSkills\r\n+// } from './constants';\r\n \r\n-export const useRegisterLogic = () => {\r\n-  // All state management\r\n-  const [priorities, setPriorities] = useState([]);\r\n-  const [priorityInput, setPriorityInput] = useState(\"\");\r\n-  const [skills, setSkills] = useState([]);\r\n-  // ... other state declarations\r\n+// export const useRegisterLogic = () => {\r\n+//   // All state management\r\n+//   const [priorities, setPriorities] = useState([]);\r\n+//   const [priorityInput, setPriorityInput] = useState(\"\");\r\n+//   const [skills, setSkills] = useState([]);\r\n+//   // ... other state declarations\r\n \r\n-  // All handler functions\r\n-  const addPriority = () => {\r\n-    const v = priorityInput.trim();\r\n-    if (!v || priorities.includes(v)) return;\r\n-    if (priorities.length >= MAX_PRIORITIES) return;\r\n-    setPriorities(p => [...p, v]);\r\n-    setPriorityInput(\"\");\r\n-  };\r\n+//   // All handler functions\r\n\\ No newline at end of file\n+//   const addPriority = () => {\r\n+//     const v = priorityInput.trim();\r\n+//     if (!v || priorities.includes(v)) return;\r\n+//     if (priorities.length >= MAX_PRIORITIES) return;\r\n+//     setPriorities(p => [...p, v]);\r\n+//     setPriorityInput(\"\");\r\n+//   };\r\n \r\n-  // ... other handler functions\r\n+//   // ... other handler functions\r\n \r\n-  return {\r\n-    // State\r\n-    priorities, priorityInput, \r\n-    skills, skillInput,setPriorityInput,\r\n-    skillInput, setSkillInput, // Ensure these are returned\r\n-    industryInput, setIndustryInput,\r\n-    // Handlers\r\n-    addPriority, removePriority, handlePriorityKey,skills, addSkill, removeSkill,priorities\r\n-    // ... other returned values\r\n-  };\r\n-};\n+//   return {\r\n+//     // State\r\n+//     priorities, priorityInput, \r\n+//     skills, skillInput,setPriorityInput,\r\n+//     skillInput, setSkillInput, // Ensure these are returned\r\n+//     industryInput, setIndustryInput,\r\n+//     // Handlers\r\n+//     addPriority, removePriority, handlePriorityKey,skills, addSkill, removeSkill,priorities\r\n+//     // ... other returned values\r\n+//   };\r\n+// };\n\\ No newline at end of file\n"
                }
            ],
            "date": 1755008609084,
            "name": "Commit-0",
            "content": "import { useState } from 'react';\r\nimport { \r\n  MAX_PRIORITIES, \r\n  MAX_SKILLS, \r\n  MAX_INDUSTRIES,\r\n  commonSkills\r\n} from './constants';\r\n\r\nexport const useRegisterLogic = () => {\r\n  // All state management\r\n  const [priorities, setPriorities] = useState([]);\r\n  const [priorityInput, setPriorityInput] = useState(\"\");\r\n  const [skills, setSkills] = useState([]);\r\n  // ... other state declarations\r\n\r\n  // All handler functions\r\n  const addPriority = () => {\r\n    const v = priorityInput.trim();\r\n    if (!v || priorities.includes(v) return;\r\n    if (priorities.length >= MAX_PRIORITIES) return;\r\n    setPriorities(p => [...p, v]);\r\n    setPriorityInput(\"\");\r\n  };\r\n\r\n  // ... other handler functions\r\n\r\n  return {\r\n    // State\r\n    priorities, priorityInput, \r\n    skills, skillInput,\r\n    // Handlers\r\n    addPriority, removePriority, handlePriorityKey,\r\n    // ... other returned values\r\n  };\r\n};"
        }
    ]
}